var N=null,E="",T="t",U="u",searchIndex={};
var R=["rand_core","errorkind","A wrapper type implementing [`RngCore`] for some type…","The core part of the RNG, implementing the `generate`…","Create a new `BlockRng` from an existing RNG implementing…","Get the index into the result buffer.","Reset the number of available results. This will force a…","generate_and_set","Generate a new set of results immediately, setting the…","usize","Implement `fill_bytes` by reading chunks from the output…","try_from","borrow_mut","try_into","result","rand_core::block","to_owned","clone_into","type_id","next_u32","next_u64","fill_bytes","try_fill_bytes","from_seed","seed_from_u64","from_rng","blockrng","blockrng64","formatter","description","serialize","deserialize","ErrorKind","BlockRng","BlockRng64","BlockRngCore","SeedableRng","rand_pcg","Lcg64Xsh32","Mcg128Xsl64","borrow","typeid","Hc128Rng","Hc128Core","generate","rand_xoshiro","Jump forward, equivalently to 2^64 calls to `next_u32()`.","Jump forward, equivalently to 2^128 calls to `next_u64()`.","long_jump","Jump forward, equivalently to 2^192 calls to `next_u64()`.","Jump forward, equivalently to 2^256 calls to `next_u64()`.","Jump forward, equivalently to 2^64 calls to `next_u64()`.","Jump forward, equivalently to 2^96 calls to `next_u64()`.","splitmix64","xoshiro128starstar","xoshiro128plus","xoshiro256starstar","xoshiro256plus","seed512","xoshiro512starstar","xoshiro512plus","xoroshiro128plus","xoroshiro128starstar","xoroshiro64starstar","xoroshiro64star","Xoshiro128StarStar","Xoshiro128Plus","Xoshiro256StarStar","Xoshiro256Plus","Xoshiro512StarStar","Xoshiro512Plus","Xoroshiro128Plus","Xoroshiro128StarStar","SplitMix64","Xoroshiro64StarStar","Xoroshiro64Star","rand_isaac","new_from_u64","Create an ISAAC-64 random number generator using an `u64`…","rand_isaac::isaac","rand_isaac::isaac64","Refills the output buffer, `results`. See also the…","isaacarray","Create an ISAAC random number generator using an `u64` as…","IsaacRng","Isaac64Rng","Isaac64Core","IsaacCore","rand_chacha","chachacore","ChaChaRng","ChaChaCore","A cryptographically secure random number generator that…","rand_xorshift","XorShiftRng","rand_jitter","timererror","jitterrng","TimerError","JitterRng","to_string","A distribution to sample floating point numbers uniformly…","Sample values uniformly between two bounds.","new_inclusive","Create a new `Uniform` instance which samples uniformly…","rand::distributions","bernoulli","dirichlet","rand::rngs","sample_iter","rand::seq","weightederror","choose_multiple","Fill `dest` entirely with random bytes (uniform value…","choose_mut","Shuffle a mutable slice in place.","from_cast","into_bits","from_bits","rand::distributions::uniform","into_iter","from_entropy","rand::rngs::adapter","rand::rngs::mock","rand::seq::index","sample_single","size_hint","threadrng","weightedindex","unitspheresurface","unitcircle","chisquared","lognormal","triangular","indexvec","indexvecintoiter","uniform","WeightedError","SampleUniform","UniformSampler","SampleBorrow","Bernoulli","WeightedIndex","UnitSphereSurface","UnitCircle","ChiSquared","LogNormal","Dirichlet","Triangular","Distribution","WeightedChoice","ReseedingRng","EntropyRng","SliceRandom","IteratorRandom","AsByteSliceMut","FromEntropy","Alphanumeric","OpenClosed01","StandardNormal","UniformInt","UniformFloat","UniformDuration","ThreadRng","SliceChooseIter","IndexVecIter","IndexVecIntoIter","A random number generator that retrieves randomness…","Create a new `OsRng`.","Error type of random number generators","The error kind","The error message","Error kind which can be matched over.","Unavailable","Feature is not available; not recoverable.","Unexpected","General failure; there may be a chance of recovery on retry.","Transient","A transient failure which likely can be resolved or worked…","Not ready yet: recommended to try again a little later.","should_retry","True if this kind of error may resolve itself on retry.","should_wait","True if we should retry but wait before retrying","A description of this error kind","Create a new instance, with specified kind and a message.","with_cause","Create a new instance, with specified kind, message, and a…","take_cause","Take the cause, if any. This allows the embedded cause to…","The core of a random number generator.","Return the next random `u32`.","Return the next random `u64`.","Fill `dest` with random data.","Fill `dest` entirely with random data.","CryptoRng","A marker trait used to indicate that an [`RngCore`] or…","A random number generator that can be explicitly seeded.","Seed type, which is restricted to types…","Create a new PRNG using the given seed.","Create a new PRNG using a `u64` seed.","Create a new PRNG seeded from another `Rng`.","A true random number generator based on jitter in the CPU…","An error that can occur when [`JitterRng::test_timer`]…","No timer available.","CoarseTimer","Timer too coarse to use as an entropy source.","NotMonotonic","Timer is not monotonically increasing.","TinyVariantions","Variations of deltas of time too small.","TooManyStuck","Too many stuck results (indicating no added entropy).","Create a new `JitterRng`. Makes use of `std::time` for a…","new_with_timer","Create a new `JitterRng`. A custom timer can be supplied,…","set_rounds","Configures how many rounds are used to generate each…","test_timer","Basic quality tests on the timer, by measuring CPU timing…","timer_stats","Statistical test: return the timer delta of one normal run…","rand_wasm_bindgen_test"];
searchIndex["rand"]={"doc":"Utilities for random number generation","i":[[8,"RngCore","rand",R[190],N,N],[10,R[19],E,R[191],0,[[["self"]],["u32"]]],[10,R[20],E,R[192],0,[[["self"]],["u64"]]],[10,R[21],E,R[193],0,N],[10,R[22],E,R[194],0,N],[8,R[195],E,R[196],N,N],[8,R[36],E,R[197],N,N],[16,"Seed",E,R[198],1,N],[10,R[23],E,R[199],1,N],[11,R[24],E,R[200],1,[[["u64"]],["self"]]],[11,R[25],E,R[201],1,[[["r"]],[R[14],["error"]]]],[4,R[32],E,R[172],N,N],[13,R[173],E,R[174],2,N],[13,R[175],E,R[176],2,N],[13,R[177],E,R[178],2,N],[13,"NotReady",E,R[179],2,N],[3,"Error",E,R[169],N,N],[12,"kind",E,R[170],3,N],[12,"msg",E,R[171],3,N],[5,"thread_rng",E,"Retrieve the lazily-initialized thread-local random number…",N,[[],[R[127]]]],[5,"random",E,"Generates a random value using the thread-local random…",N,[[],[T]]],[0,"distributions",E,"Generating random samples from probability distributions.",N,N],[3,R[157],R[105],"Sample a `char`, uniformly distributed over ASCII letters…",N,N],[3,"Uniform",E,R[102],N,N],[3,R[158],E,R[101],N,N],[3,"Open01",E,R[101],N,N],[3,R[141],E,"The Bernoulli distribution.",N,N],[3,R[142],E,"A distribution using weighted sampling to pick a…",N,N],[3,R[143],E,"Samples uniformly from the surface of the unit sphere in…",N,N],[3,R[144],E,"Samples uniformly from the edge of the unit circle in two…",N,N],[3,"Gamma",E,"The Gamma distribution `Gamma(shape, scale)` distribution.",N,N],[3,R[145],E,"The chi-squared distribution `χ²(k)`, where `k` is the…",N,N],[3,"FisherF",E,"The Fisher F distribution `F(m, n)`.",N,N],[3,"StudentT",E,"The Student t distribution, `t(nu)`, where `nu` is the…",N,N],[3,"Beta",E,"The Beta distribution with shape parameters `alpha` and…",N,N],[3,"Normal",E,"The normal distribution `N(mean, std_dev**2)`.",N,N],[3,R[146],E,"The log-normal distribution `ln N(mean, std_dev**2)`.",N,N],[3,R[159],E,"Samples floating-point numbers according to the normal…",N,N],[3,"Exp",E,"The exponential distribution `Exp(lambda)`.",N,N],[3,"Exp1",E,"Samples floating-point numbers according to the…",N,N],[3,"Pareto",E,"Samples floating-point numbers according to the Pareto…",N,N],[3,"Poisson",E,"The Poisson distribution `Poisson(lambda)`.",N,N],[3,"Binomial",E,"The binomial distribution `Binomial(n, p)`.",N,N],[3,"Cauchy",E,"The Cauchy distribution `Cauchy(median, scale)`.",N,N],[3,R[147],E,"The dirichelet distribution `Dirichlet(alpha)`.",N,N],[3,R[148],E,"The triangular distribution.",N,N],[3,"Weibull",E,"Samples floating-point numbers according to the Weibull…",N,N],[3,"DistIter",E,"An iterator that generates random values of `T` with…",N,N],[3,"Standard",E,"A generic random value distribution, implemented for many…",N,N],[3,"Weighted",E,"A value with a particular weight for use with…",N,N],[12,"weight",E,"The numerical weight of this item",4,N],[12,"item",E,"The actual item which is being weighted",4,N],[3,R[150],E,"A distribution that selects from a finite collection of…",N,N],[4,R[137],E,"Error type returned from `WeightedIndex::new`.",N,N],[13,"NoItem",E,"The provided iterator contained no items.",5,N],[13,"NegativeWeight",E,"A weight lower than zero was used.",5,N],[13,"AllWeightsZero",E,"All items in the provided iterator had a weight of zero.",5,N],[0,R[136],E,"A distribution uniformly sampling numbers within a given…",N,N],[3,"Uniform",R[119],R[102],N,N],[3,R[160],E,"The back-end implementing [`UniformSampler`] for integer…",N,N],[3,R[161],E,"The back-end implementing [`UniformSampler`] for…",N,N],[3,R[162],E,"The back-end implementing [`UniformSampler`] for `Duration`.",N,N],[8,R[138],E,"Helper trait for creating objects using the correct…",N,N],[16,"Sampler",E,"The `UniformSampler` implementation supporting type `X`.",6,N],[8,R[139],E,"Helper trait handling actual uniform sampling.",N,N],[16,"X",E,"The type sampled by this implementation.",7,N],[10,"new",E,"Construct self, with inclusive lower bound and exclusive…",7,[[["b1"],["b2"]],["self"]]],[10,R[103],E,"Construct self, with inclusive bounds `[low, high]`.",7,[[["b1"],["b2"]],["self"]]],[10,"sample",E,"Sample a value.",7,N],[11,R[125],E,"Sample a single value uniformly from a range with…",7,N],[8,R[140],E,"Helper trait similar to [`Borrow`] but implemented only…",N,N],[10,R[40],E,"Immutably borrows from an owned value. See…",8,[[["self"]],["borrowed"]]],[11,"new",E,R[104],9,[[["b1"],["b2"]],[R[136]]]],[11,R[103],E,R[104],9,[[["b1"],["b2"]],[R[136]]]],[11,"new",R[105],"Construct a new `Bernoulli` with the given probability of…",10,[[["f64"]],[R[106]]]],[11,"from_ratio",E,"Construct a new `Bernoulli` with the probability of…",10,[[["u32"],["u32"]],[R[106]]]],[11,"new",E,"Creates a new a `WeightedIndex` [`Distribution`] using the…",11,[[["i"]],[R[14],[R[128],R[111]]]]],[11,"new",E,"Construct a new `UnitSphereSurface` distribution.",12,[[],[R[129]]]],[11,"new",E,"Construct a new `UnitCircle` distribution.",13,[[],[R[130]]]],[11,"new",E,"Construct an object representing the `Gamma(shape, scale)`…",14,[[["f64"],["f64"]],["gamma"]]],[11,"new",E,"Create a new chi-squared distribution with…",15,[[["f64"]],[R[131]]]],[11,"new",E,"Create a new `FisherF` distribution, with the given…",16,[[["f64"],["f64"]],["fisherf"]]],[11,"new",E,"Create a new Student t distribution with `n` degrees of…",17,[[["f64"]],["studentt"]]],[11,"new",E,"Construct an object representing the `Beta(alpha, beta)`…",18,[[["f64"],["f64"]],["beta"]]],[11,"new",E,"Construct a new `Normal` distribution with the given mean…",19,[[["f64"],["f64"]],["normal"]]],[11,"new",E,"Construct a new `LogNormal` distribution with the given…",20,[[["f64"],["f64"]],[R[132]]]],[11,"new",E,"Construct a new `Exp` with the given shape parameter…",21,[[["f64"]],["exp"]]],[11,"new",E,"Construct a new Pareto distribution with given `scale` and…",22,[[["f64"],["f64"]],["pareto"]]],[11,"new",E,"Construct a new `Poisson` with the given shape parameter…",23,[[["f64"]],["poisson"]]],[11,"new",E,"Construct a new `Binomial` with the given shape parameters…",24,[[["u64"],["f64"]],["binomial"]]],[11,"new",E,"Construct a new `Cauchy` with the given shape parameters…",25,[[["f64"],["f64"]],["cauchy"]]],[11,"new",E,"Construct a new `Dirichlet` with the given alpha parameter…",26,[[["v"]],[R[107]]]],[11,"new_with_param",E,"Construct a new `Dirichlet` with the given shape parameter…",26,[[["f64"],[R[9]]],[R[107]]]],[11,"new",E,"Construct a new `Triangular` with minimum `min`, maximum…",27,[[["f64"],["f64"],["f64"]],[R[133]]]],[11,"new",E,"Construct a new `Weibull` distribution with given `scale`…",28,[[["f64"],["f64"]],["weibull"]]],[8,R[149],E,"Types (distributions) that can be used to create a random…",N,N],[10,"sample",E,"Generate a random value of `T`, using `rng` as the source…",29,[[["self"],["r"]],[T]]],[11,R[109],E,"Create an iterator that generates random values of `T`,…",29,[[["self"],["r"]],["distiter"]]],[11,"new",E,"Create a new `WeightedChoice`.",30,N],[0,"prelude","rand","Convenience re-export of common members",N,N],[0,"prng",E,"Pseudo-random number generators.",N,N],[0,"rngs",E,"Random number generators and adapters for common usage:",N,N],[3,R[99],R[108],R[202],N,N],[4,R[98],E,R[203],N,N],[13,"NoTimer",E,R[204],31,N],[13,R[205],E,R[206],31,N],[13,R[207],E,R[208],31,N],[13,R[209],E,R[210],31,N],[13,R[211],E,R[212],31,N],[3,"OsRng",E,R[167],N,N],[3,R[152],E,"An interface returning random data from external…",N,N],[3,"SmallRng",E,"An RNG recommended when small state, cheap initialization…",N,N],[3,"StdRng",E,"The standard RNG. The PRNG algorithm in `StdRng` is chosen…",N,N],[3,R[163],E,"The type returned by [`thread_rng`], essentially just a…",N,N],[0,"adapter",E,"Wrappers / adapters forming RNGs",N,N],[3,"ReadRng",R[122],"An RNG that reads random bytes straight from any type…",N,N],[3,R[151],E,"A wrapper around any PRNG that implements…",N,N],[11,"new",E,"Create a new `ReadRng` from a `Read`.",32,[[["r"]],["readrng"]]],[11,"new",E,"Create a new `ReseedingRng` from an existing PRNG,…",33,[[["r"],["u64"],["rsdr"]],["self"]]],[11,"reseed",E,"Reseed the internal PRNG.",33,[[["self"]],[R[14],["error"]]]],[11,"new",R[108],"Create a new `EntropyRng`.",34,[[],["self"]]],[0,"mock",E,"Mock random number generator",N,N],[3,"StepRng",R[123],"A simple implementation of `RngCore` for testing purposes.",N,N],[11,"new",E,"Create a `StepRng`, yielding an arithmetic sequence…",35,[[["u64"],["u64"]],["self"]]],[0,"seq","rand","Functions for randomly accessing and sampling sequences.",N,N],[3,R[164],R[110],"Iterator over multiple choices, as returned by…",N,N],[5,R[109],E,"Randomly sample `amount` elements from a finite iterator.",N,[[["r"],["i"],[R[9]]],[R[14],["vec","vec"]]]],[5,"sample_slice",E,"Randomly sample exactly `amount` values from `slice`.",N,N],[5,"sample_slice_ref",E,"Randomly sample exactly `amount` references from `slice`.",N,N],[0,"index",E,"Index sampling",N,N],[4,"IndexVec",R[124],"A vector of indices.",N,N],[4,R[165],E,"Return type of `IndexVec::iter`.",N,N],[4,R[166],E,"Return type of `IndexVec::into_iter`.",N,N],[5,"sample",E,"Randomly sample exactly `amount` distinct indices from…",N,[[["r"],[R[9]],[R[9]]],[R[134]]]],[11,"len",E,"Returns the number of indices",36,[[["self"]],[R[9]]]],[11,"index",E,"Return the value at the given `index`.",36,[[["self"],[R[9]]],[R[9]]]],[11,"into_vec",E,"Return result as a `Vec<usize>`. Conversion may or may not…",36,[[["self"]],["vec",[R[9]]]]],[11,"iter",E,"Iterate over the indices as a sequence of `usize` values",36,[[["self"]],["indexveciter"]]],[11,R[120],E,"Convert into an iterator over the indices as a sequence of…",36,[[["self"]],[R[135]]]],[8,R[153],R[110],"Extension trait on slices, providing random mutation and…",N,N],[16,"Item",E,"The element type.",37,N],[10,"choose",E,"Returns a reference to one random element of the slice, or…",37,[[["self"],["r"]],["option"]]],[10,R[114],E,"Returns a mutable reference to one random element of the…",37,[[["self"],["r"]],["option"]]],[10,R[112],E,"Produces an iterator that chooses `amount` elements from…",37,[[["self"],["r"],[R[9]]],["slicechooseiter"]]],[10,"choose_weighted",E,"Similar to [`choose`], where the likelihood of each…",37,[[["self"],["r"],["f"]],[R[14],[R[111]]]]],[10,"choose_weighted_mut",E,"Similar to [`choose_mut`], where the likelihood of each…",37,[[["self"],["r"],["f"]],[R[14],[R[111]]]]],[10,"shuffle",E,R[115],37,[[["self"],["r"]]]],[10,"partial_shuffle",E,"Shuffle a slice in place, but exit early.",37,N],[8,R[154],E,"Extension trait on iterators, providing random sampling…",N,N],[11,"choose",E,"Choose one element at random from the iterator. If you…",38,[[["self"],["r"]],["option"]]],[11,"choose_multiple_fill",E,"Collects values at random from the iterator into a…",38,N],[11,R[112],E,"Collects `amount` values at random from the iterator into…",38,[[["self"],["r"],[R[9]]],["vec"]]],[8,"Rng","rand","An automatically-implemented extension trait on…",N,N],[11,"gen",E,"Return a random value supporting the [`Standard`]…",39,[[["self"]],[T]]],[11,"gen_range",E,"Generate a random value in the range [`low`, `high`), i.e.…",39,[[["self"],["b1"],["b2"]],[T]]],[11,"sample",E,"Sample a new value, using the given distribution.",39,[[["self"],["d"]],[T]]],[11,R[109],E,"Create an iterator that generates values using the given…",39,[[["self"],["d"]],["distiter"]]],[11,"fill",E,R[113],39,[[["self"],[T]]]],[11,"try_fill",E,R[113],39,[[["self"],[T]],[R[14],["error"]]]],[11,"gen_bool",E,"Return a bool with a probability `p` of being true.",39,[[["self"],["f64"]],["bool"]]],[11,"gen_ratio",E,"Return a bool with a probability of…",39,[[["self"],["u32"],["u32"]],["bool"]]],[11,"choose",E,"Return a random element from `values`.",39,N],[11,R[114],E,"Return a mutable pointer to a random element from `values`.",39,N],[11,"shuffle",E,R[115],39,N],[8,R[155],E,"Trait for casting types to byte slices",N,N],[10,"as_byte_slice_mut",E,"Return a mutable reference to self as a byte slice",40,N],[10,"to_le",E,"Call `to_le` on each element (i.e. byte-swap on Big Endian…",40,[[["self"]]]],[8,R[156],E,"A convenience extension to [`SeedableRng`] allowing…",N,N],[10,R[121],E,"Creates a new instance, automatically seeded with fresh…",41,[[],["self"]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[["self"]],[U]]],[11,R[16],E,E,2,[[["self"]],[T]]],[11,R[17],E,E,2,N],[11,R[11],E,E,2,[[[U]],[R[14]]]],[11,R[40],E,E,2,[[["self"]],[T]]],[11,R[18],E,E,2,[[["self"]],[R[41]]]],[11,R[12],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[R[14]]]],[11,R[116],E,E,2,[[[T]],[T]]],[11,"cast",E,E,2,[[["self"]],[U]]],[11,R[117],E,E,2,[[["self"]],[U]]],[11,R[118],E,E,2,[[[T]],[T]]],[11,R[100],E,E,3,[[["self"]],["string"]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[["self"]],[U]]],[11,R[11],E,E,3,[[[U]],[R[14]]]],[11,R[40],E,E,3,[[["self"]],[T]]],[11,R[18],E,E,3,[[["self"]],[R[41]]]],[11,R[12],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[R[14]]]],[11,R[116],E,E,3,[[[T]],[T]]],[11,"cast",E,E,3,[[["self"]],[U]]],[11,R[117],E,E,3,[[["self"]],[U]]],[11,R[118],E,E,3,[[[T]],[T]]],[11,"from",R[105],E,42,[[[T]],[T]]],[11,"into",E,E,42,[[["self"]],[U]]],[11,R[11],E,E,42,[[[U]],[R[14]]]],[11,R[40],E,E,42,[[["self"]],[T]]],[11,R[18],E,E,42,[[["self"]],[R[41]]]],[11,R[12],E,E,42,[[["self"]],[T]]],[11,R[13],E,E,42,[[["self"]],[R[14]]]],[11,R[116],E,E,42,[[[T]],[T]]],[11,"cast",E,E,42,[[["self"]],[U]]],[11,R[117],E,E,42,[[["self"]],[U]]],[11,R[118],E,E,42,[[[T]],[T]]],[11,"from",R[119],E,9,[[[T]],[T]]],[11,"into",E,E,9,[[["self"]],[U]]],[11,R[16],E,E,9,[[["self"]],[T]]],[11,R[17],E,E,9,N],[11,R[11],E,E,9,[[[U]],[R[14]]]],[11,R[40],E,E,9,[[["self"]],[T]]],[11,R[18],E,E,9,[[["self"]],[R[41]]]],[11,R[12],E,E,9,[[["self"]],[T]]],[11,R[13],E,E,9,[[["self"]],[R[14]]]],[11,R[116],E,E,9,[[[T]],[T]]],[11,"cast",E,E,9,[[["self"]],[U]]],[11,R[117],E,E,9,[[["self"]],[U]]],[11,R[118],E,E,9,[[[T]],[T]]],[11,"from",R[105],E,43,[[[T]],[T]]],[11,"into",E,E,43,[[["self"]],[U]]],[11,R[16],E,E,43,[[["self"]],[T]]],[11,R[17],E,E,43,N],[11,R[11],E,E,43,[[[U]],[R[14]]]],[11,R[40],E,E,43,[[["self"]],[T]]],[11,R[18],E,E,43,[[["self"]],[R[41]]]],[11,R[12],E,E,43,[[["self"]],[T]]],[11,R[13],E,E,43,[[["self"]],[R[14]]]],[11,R[116],E,E,43,[[[T]],[T]]],[11,"cast",E,E,43,[[["self"]],[U]]],[11,R[117],E,E,43,[[["self"]],[U]]],[11,R[118],E,E,43,[[[T]],[T]]],[11,"from",E,E,44,[[[T]],[T]]],[11,"into",E,E,44,[[["self"]],[U]]],[11,R[16],E,E,44,[[["self"]],[T]]],[11,R[17],E,E,44,N],[11,R[11],E,E,44,[[[U]],[R[14]]]],[11,R[40],E,E,44,[[["self"]],[T]]],[11,R[18],E,E,44,[[["self"]],[R[41]]]],[11,R[12],E,E,44,[[["self"]],[T]]],[11,R[13],E,E,44,[[["self"]],[R[14]]]],[11,R[116],E,E,44,[[[T]],[T]]],[11,"cast",E,E,44,[[["self"]],[U]]],[11,R[117],E,E,44,[[["self"]],[U]]],[11,R[118],E,E,44,[[[T]],[T]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[["self"]],[U]]],[11,R[16],E,E,10,[[["self"]],[T]]],[11,R[17],E,E,10,N],[11,R[11],E,E,10,[[[U]],[R[14]]]],[11,R[40],E,E,10,[[["self"]],[T]]],[11,R[18],E,E,10,[[["self"]],[R[41]]]],[11,R[12],E,E,10,[[["self"]],[T]]],[11,R[13],E,E,10,[[["self"]],[R[14]]]],[11,R[116],E,E,10,[[[T]],[T]]],[11,"cast",E,E,10,[[["self"]],[U]]],[11,R[117],E,E,10,[[["self"]],[U]]],[11,R[118],E,E,10,[[[T]],[T]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[["self"]],[U]]],[11,R[16],E,E,11,[[["self"]],[T]]],[11,R[17],E,E,11,N],[11,R[11],E,E,11,[[[U]],[R[14]]]],[11,R[40],E,E,11,[[["self"]],[T]]],[11,R[18],E,E,11,[[["self"]],[R[41]]]],[11,R[12],E,E,11,[[["self"]],[T]]],[11,R[13],E,E,11,[[["self"]],[R[14]]]],[11,R[116],E,E,11,[[[T]],[T]]],[11,"cast",E,E,11,[[["self"]],[U]]],[11,R[117],E,E,11,[[["self"]],[U]]],[11,R[118],E,E,11,[[[T]],[T]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[["self"]],[U]]],[11,R[16],E,E,12,[[["self"]],[T]]],[11,R[17],E,E,12,N],[11,R[11],E,E,12,[[[U]],[R[14]]]],[11,R[40],E,E,12,[[["self"]],[T]]],[11,R[18],E,E,12,[[["self"]],[R[41]]]],[11,R[12],E,E,12,[[["self"]],[T]]],[11,R[13],E,E,12,[[["self"]],[R[14]]]],[11,R[116],E,E,12,[[[T]],[T]]],[11,"cast",E,E,12,[[["self"]],[U]]],[11,R[117],E,E,12,[[["self"]],[U]]],[11,R[118],E,E,12,[[[T]],[T]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[["self"]],[U]]],[11,R[16],E,E,13,[[["self"]],[T]]],[11,R[17],E,E,13,N],[11,R[11],E,E,13,[[[U]],[R[14]]]],[11,R[40],E,E,13,[[["self"]],[T]]],[11,R[18],E,E,13,[[["self"]],[R[41]]]],[11,R[12],E,E,13,[[["self"]],[T]]],[11,R[13],E,E,13,[[["self"]],[R[14]]]],[11,R[116],E,E,13,[[[T]],[T]]],[11,"cast",E,E,13,[[["self"]],[U]]],[11,R[117],E,E,13,[[["self"]],[U]]],[11,R[118],E,E,13,[[[T]],[T]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[["self"]],[U]]],[11,R[16],E,E,14,[[["self"]],[T]]],[11,R[17],E,E,14,N],[11,R[11],E,E,14,[[[U]],[R[14]]]],[11,R[40],E,E,14,[[["self"]],[T]]],[11,R[18],E,E,14,[[["self"]],[R[41]]]],[11,R[12],E,E,14,[[["self"]],[T]]],[11,R[13],E,E,14,[[["self"]],[R[14]]]],[11,R[116],E,E,14,[[[T]],[T]]],[11,"cast",E,E,14,[[["self"]],[U]]],[11,R[117],E,E,14,[[["self"]],[U]]],[11,R[118],E,E,14,[[[T]],[T]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[["self"]],[U]]],[11,R[16],E,E,15,[[["self"]],[T]]],[11,R[17],E,E,15,N],[11,R[11],E,E,15,[[[U]],[R[14]]]],[11,R[40],E,E,15,[[["self"]],[T]]],[11,R[18],E,E,15,[[["self"]],[R[41]]]],[11,R[12],E,E,15,[[["self"]],[T]]],[11,R[13],E,E,15,[[["self"]],[R[14]]]],[11,R[116],E,E,15,[[[T]],[T]]],[11,"cast",E,E,15,[[["self"]],[U]]],[11,R[117],E,E,15,[[["self"]],[U]]],[11,R[118],E,E,15,[[[T]],[T]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[["self"]],[U]]],[11,R[16],E,E,16,[[["self"]],[T]]],[11,R[17],E,E,16,N],[11,R[11],E,E,16,[[[U]],[R[14]]]],[11,R[40],E,E,16,[[["self"]],[T]]],[11,R[18],E,E,16,[[["self"]],[R[41]]]],[11,R[12],E,E,16,[[["self"]],[T]]],[11,R[13],E,E,16,[[["self"]],[R[14]]]],[11,R[116],E,E,16,[[[T]],[T]]],[11,"cast",E,E,16,[[["self"]],[U]]],[11,R[117],E,E,16,[[["self"]],[U]]],[11,R[118],E,E,16,[[[T]],[T]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[["self"]],[U]]],[11,R[16],E,E,17,[[["self"]],[T]]],[11,R[17],E,E,17,N],[11,R[11],E,E,17,[[[U]],[R[14]]]],[11,R[40],E,E,17,[[["self"]],[T]]],[11,R[18],E,E,17,[[["self"]],[R[41]]]],[11,R[12],E,E,17,[[["self"]],[T]]],[11,R[13],E,E,17,[[["self"]],[R[14]]]],[11,R[116],E,E,17,[[[T]],[T]]],[11,"cast",E,E,17,[[["self"]],[U]]],[11,R[117],E,E,17,[[["self"]],[U]]],[11,R[118],E,E,17,[[[T]],[T]]],[11,"from",E,E,18,[[[T]],[T]]],[11,"into",E,E,18,[[["self"]],[U]]],[11,R[16],E,E,18,[[["self"]],[T]]],[11,R[17],E,E,18,N],[11,R[11],E,E,18,[[[U]],[R[14]]]],[11,R[40],E,E,18,[[["self"]],[T]]],[11,R[18],E,E,18,[[["self"]],[R[41]]]],[11,R[12],E,E,18,[[["self"]],[T]]],[11,R[13],E,E,18,[[["self"]],[R[14]]]],[11,R[116],E,E,18,[[[T]],[T]]],[11,"cast",E,E,18,[[["self"]],[U]]],[11,R[117],E,E,18,[[["self"]],[U]]],[11,R[118],E,E,18,[[[T]],[T]]],[11,"from",E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[["self"]],[U]]],[11,R[16],E,E,19,[[["self"]],[T]]],[11,R[17],E,E,19,N],[11,R[11],E,E,19,[[[U]],[R[14]]]],[11,R[40],E,E,19,[[["self"]],[T]]],[11,R[18],E,E,19,[[["self"]],[R[41]]]],[11,R[12],E,E,19,[[["self"]],[T]]],[11,R[13],E,E,19,[[["self"]],[R[14]]]],[11,R[116],E,E,19,[[[T]],[T]]],[11,"cast",E,E,19,[[["self"]],[U]]],[11,R[117],E,E,19,[[["self"]],[U]]],[11,R[118],E,E,19,[[[T]],[T]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[["self"]],[U]]],[11,R[16],E,E,20,[[["self"]],[T]]],[11,R[17],E,E,20,N],[11,R[11],E,E,20,[[[U]],[R[14]]]],[11,R[40],E,E,20,[[["self"]],[T]]],[11,R[18],E,E,20,[[["self"]],[R[41]]]],[11,R[12],E,E,20,[[["self"]],[T]]],[11,R[13],E,E,20,[[["self"]],[R[14]]]],[11,R[116],E,E,20,[[[T]],[T]]],[11,"cast",E,E,20,[[["self"]],[U]]],[11,R[117],E,E,20,[[["self"]],[U]]],[11,R[118],E,E,20,[[[T]],[T]]],[11,"from",E,E,45,[[[T]],[T]]],[11,"into",E,E,45,[[["self"]],[U]]],[11,R[16],E,E,45,[[["self"]],[T]]],[11,R[17],E,E,45,N],[11,R[11],E,E,45,[[[U]],[R[14]]]],[11,R[40],E,E,45,[[["self"]],[T]]],[11,R[18],E,E,45,[[["self"]],[R[41]]]],[11,R[12],E,E,45,[[["self"]],[T]]],[11,R[13],E,E,45,[[["self"]],[R[14]]]],[11,R[116],E,E,45,[[[T]],[T]]],[11,"cast",E,E,45,[[["self"]],[U]]],[11,R[117],E,E,45,[[["self"]],[U]]],[11,R[118],E,E,45,[[[T]],[T]]],[11,"from",E,E,21,[[[T]],[T]]],[11,"into",E,E,21,[[["self"]],[U]]],[11,R[16],E,E,21,[[["self"]],[T]]],[11,R[17],E,E,21,N],[11,R[11],E,E,21,[[[U]],[R[14]]]],[11,R[40],E,E,21,[[["self"]],[T]]],[11,R[18],E,E,21,[[["self"]],[R[41]]]],[11,R[12],E,E,21,[[["self"]],[T]]],[11,R[13],E,E,21,[[["self"]],[R[14]]]],[11,R[116],E,E,21,[[[T]],[T]]],[11,"cast",E,E,21,[[["self"]],[U]]],[11,R[117],E,E,21,[[["self"]],[U]]],[11,R[118],E,E,21,[[[T]],[T]]],[11,"from",E,E,46,[[[T]],[T]]],[11,"into",E,E,46,[[["self"]],[U]]],[11,R[16],E,E,46,[[["self"]],[T]]],[11,R[17],E,E,46,N],[11,R[11],E,E,46,[[[U]],[R[14]]]],[11,R[40],E,E,46,[[["self"]],[T]]],[11,R[18],E,E,46,[[["self"]],[R[41]]]],[11,R[12],E,E,46,[[["self"]],[T]]],[11,R[13],E,E,46,[[["self"]],[R[14]]]],[11,R[116],E,E,46,[[[T]],[T]]],[11,"cast",E,E,46,[[["self"]],[U]]],[11,R[117],E,E,46,[[["self"]],[U]]],[11,R[118],E,E,46,[[[T]],[T]]],[11,"from",E,E,22,[[[T]],[T]]],[11,"into",E,E,22,[[["self"]],[U]]],[11,R[16],E,E,22,[[["self"]],[T]]],[11,R[17],E,E,22,N],[11,R[11],E,E,22,[[[U]],[R[14]]]],[11,R[40],E,E,22,[[["self"]],[T]]],[11,R[18],E,E,22,[[["self"]],[R[41]]]],[11,R[12],E,E,22,[[["self"]],[T]]],[11,R[13],E,E,22,[[["self"]],[R[14]]]],[11,R[116],E,E,22,[[[T]],[T]]],[11,"cast",E,E,22,[[["self"]],[U]]],[11,R[117],E,E,22,[[["self"]],[U]]],[11,R[118],E,E,22,[[[T]],[T]]],[11,"from",E,E,23,[[[T]],[T]]],[11,"into",E,E,23,[[["self"]],[U]]],[11,R[16],E,E,23,[[["self"]],[T]]],[11,R[17],E,E,23,N],[11,R[11],E,E,23,[[[U]],[R[14]]]],[11,R[40],E,E,23,[[["self"]],[T]]],[11,R[18],E,E,23,[[["self"]],[R[41]]]],[11,R[12],E,E,23,[[["self"]],[T]]],[11,R[13],E,E,23,[[["self"]],[R[14]]]],[11,R[116],E,E,23,[[[T]],[T]]],[11,"cast",E,E,23,[[["self"]],[U]]],[11,R[117],E,E,23,[[["self"]],[U]]],[11,R[118],E,E,23,[[[T]],[T]]],[11,"from",E,E,24,[[[T]],[T]]],[11,"into",E,E,24,[[["self"]],[U]]],[11,R[16],E,E,24,[[["self"]],[T]]],[11,R[17],E,E,24,N],[11,R[11],E,E,24,[[[U]],[R[14]]]],[11,R[40],E,E,24,[[["self"]],[T]]],[11,R[18],E,E,24,[[["self"]],[R[41]]]],[11,R[12],E,E,24,[[["self"]],[T]]],[11,R[13],E,E,24,[[["self"]],[R[14]]]],[11,R[116],E,E,24,[[[T]],[T]]],[11,"cast",E,E,24,[[["self"]],[U]]],[11,R[117],E,E,24,[[["self"]],[U]]],[11,R[118],E,E,24,[[[T]],[T]]],[11,"from",E,E,25,[[[T]],[T]]],[11,"into",E,E,25,[[["self"]],[U]]],[11,R[16],E,E,25,[[["self"]],[T]]],[11,R[17],E,E,25,N],[11,R[11],E,E,25,[[[U]],[R[14]]]],[11,R[40],E,E,25,[[["self"]],[T]]],[11,R[18],E,E,25,[[["self"]],[R[41]]]],[11,R[12],E,E,25,[[["self"]],[T]]],[11,R[13],E,E,25,[[["self"]],[R[14]]]],[11,R[116],E,E,25,[[[T]],[T]]],[11,"cast",E,E,25,[[["self"]],[U]]],[11,R[117],E,E,25,[[["self"]],[U]]],[11,R[118],E,E,25,[[[T]],[T]]],[11,"from",E,E,26,[[[T]],[T]]],[11,"into",E,E,26,[[["self"]],[U]]],[11,R[16],E,E,26,[[["self"]],[T]]],[11,R[17],E,E,26,N],[11,R[11],E,E,26,[[[U]],[R[14]]]],[11,R[40],E,E,26,[[["self"]],[T]]],[11,R[18],E,E,26,[[["self"]],[R[41]]]],[11,R[12],E,E,26,[[["self"]],[T]]],[11,R[13],E,E,26,[[["self"]],[R[14]]]],[11,R[116],E,E,26,[[[T]],[T]]],[11,"cast",E,E,26,[[["self"]],[U]]],[11,R[117],E,E,26,[[["self"]],[U]]],[11,R[118],E,E,26,[[[T]],[T]]],[11,"from",E,E,27,[[[T]],[T]]],[11,"into",E,E,27,[[["self"]],[U]]],[11,R[16],E,E,27,[[["self"]],[T]]],[11,R[17],E,E,27,N],[11,R[11],E,E,27,[[[U]],[R[14]]]],[11,R[40],E,E,27,[[["self"]],[T]]],[11,R[18],E,E,27,[[["self"]],[R[41]]]],[11,R[12],E,E,27,[[["self"]],[T]]],[11,R[13],E,E,27,[[["self"]],[R[14]]]],[11,R[116],E,E,27,[[[T]],[T]]],[11,"cast",E,E,27,[[["self"]],[U]]],[11,R[117],E,E,27,[[["self"]],[U]]],[11,R[118],E,E,27,[[[T]],[T]]],[11,"from",E,E,28,[[[T]],[T]]],[11,"into",E,E,28,[[["self"]],[U]]],[11,R[16],E,E,28,[[["self"]],[T]]],[11,R[17],E,E,28,N],[11,R[11],E,E,28,[[[U]],[R[14]]]],[11,R[40],E,E,28,[[["self"]],[T]]],[11,R[18],E,E,28,[[["self"]],[R[41]]]],[11,R[12],E,E,28,[[["self"]],[T]]],[11,R[13],E,E,28,[[["self"]],[R[14]]]],[11,R[116],E,E,28,[[[T]],[T]]],[11,"cast",E,E,28,[[["self"]],[U]]],[11,R[117],E,E,28,[[["self"]],[U]]],[11,R[118],E,E,28,[[[T]],[T]]],[11,R[120],E,E,47,[[["self"]],["i"]]],[11,"from",E,E,47,[[[T]],[T]]],[11,"into",E,E,47,[[["self"]],[U]]],[11,R[11],E,E,47,[[[U]],[R[14]]]],[11,R[40],E,E,47,[[["self"]],[T]]],[11,R[18],E,E,47,[[["self"]],[R[41]]]],[11,R[12],E,E,47,[[["self"]],[T]]],[11,R[13],E,E,47,[[["self"]],[R[14]]]],[11,R[116],E,E,47,[[[T]],[T]]],[11,"cast",E,E,47,[[["self"]],[U]]],[11,R[117],E,E,47,[[["self"]],[U]]],[11,R[118],E,E,47,[[[T]],[T]]],[11,"from",E,E,48,[[[T]],[T]]],[11,"into",E,E,48,[[["self"]],[U]]],[11,R[16],E,E,48,[[["self"]],[T]]],[11,R[17],E,E,48,N],[11,R[11],E,E,48,[[[U]],[R[14]]]],[11,R[40],E,E,48,[[["self"]],[T]]],[11,R[18],E,E,48,[[["self"]],[R[41]]]],[11,R[12],E,E,48,[[["self"]],[T]]],[11,R[13],E,E,48,[[["self"]],[R[14]]]],[11,R[116],E,E,48,[[[T]],[T]]],[11,"cast",E,E,48,[[["self"]],[U]]],[11,R[117],E,E,48,[[["self"]],[U]]],[11,R[118],E,E,48,[[[T]],[T]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[["self"]],[U]]],[11,R[16],E,E,4,[[["self"]],[T]]],[11,R[17],E,E,4,N],[11,R[11],E,E,4,[[[U]],[R[14]]]],[11,R[40],E,E,4,[[["self"]],[T]]],[11,R[18],E,E,4,[[["self"]],[R[41]]]],[11,R[12],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[R[14]]]],[11,R[116],E,E,4,[[[T]],[T]]],[11,"cast",E,E,4,[[["self"]],[U]]],[11,R[117],E,E,4,[[["self"]],[U]]],[11,R[118],E,E,4,[[[T]],[T]]],[11,"from",E,E,30,[[[T]],[T]]],[11,"into",E,E,30,[[["self"]],[U]]],[11,R[11],E,E,30,[[[U]],[R[14]]]],[11,R[40],E,E,30,[[["self"]],[T]]],[11,R[18],E,E,30,[[["self"]],[R[41]]]],[11,R[12],E,E,30,[[["self"]],[T]]],[11,R[13],E,E,30,[[["self"]],[R[14]]]],[11,R[116],E,E,30,[[[T]],[T]]],[11,"cast",E,E,30,[[["self"]],[U]]],[11,R[117],E,E,30,[[["self"]],[U]]],[11,R[118],E,E,30,[[[T]],[T]]],[11,R[100],E,E,5,[[["self"]],["string"]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[["self"]],[U]]],[11,R[16],E,E,5,[[["self"]],[T]]],[11,R[17],E,E,5,N],[11,R[11],E,E,5,[[[U]],[R[14]]]],[11,R[40],E,E,5,[[["self"]],[T]]],[11,R[18],E,E,5,[[["self"]],[R[41]]]],[11,R[12],E,E,5,[[["self"]],[T]]],[11,R[13],E,E,5,[[["self"]],[R[14]]]],[11,R[116],E,E,5,[[[T]],[T]]],[11,"cast",E,E,5,[[["self"]],[U]]],[11,R[117],E,E,5,[[["self"]],[U]]],[11,R[118],E,E,5,[[[T]],[T]]],[11,"from",R[119],E,49,[[[T]],[T]]],[11,"into",E,E,49,[[["self"]],[U]]],[11,R[16],E,E,49,[[["self"]],[T]]],[11,R[17],E,E,49,N],[11,R[11],E,E,49,[[[U]],[R[14]]]],[11,R[40],E,E,49,[[["self"]],[T]]],[11,R[18],E,E,49,[[["self"]],[R[41]]]],[11,R[12],E,E,49,[[["self"]],[T]]],[11,R[13],E,E,49,[[["self"]],[R[14]]]],[11,R[116],E,E,49,[[[T]],[T]]],[11,"cast",E,E,49,[[["self"]],[U]]],[11,R[117],E,E,49,[[["self"]],[U]]],[11,R[118],E,E,49,[[[T]],[T]]],[11,"from",E,E,50,[[[T]],[T]]],[11,"into",E,E,50,[[["self"]],[U]]],[11,R[16],E,E,50,[[["self"]],[T]]],[11,R[17],E,E,50,N],[11,R[11],E,E,50,[[[U]],[R[14]]]],[11,R[40],E,E,50,[[["self"]],[T]]],[11,R[18],E,E,50,[[["self"]],[R[41]]]],[11,R[12],E,E,50,[[["self"]],[T]]],[11,R[13],E,E,50,[[["self"]],[R[14]]]],[11,R[116],E,E,50,[[[T]],[T]]],[11,"cast",E,E,50,[[["self"]],[U]]],[11,R[117],E,E,50,[[["self"]],[U]]],[11,R[118],E,E,50,[[[T]],[T]]],[11,"from",E,E,51,[[[T]],[T]]],[11,"into",E,E,51,[[["self"]],[U]]],[11,R[16],E,E,51,[[["self"]],[T]]],[11,R[17],E,E,51,N],[11,R[11],E,E,51,[[[U]],[R[14]]]],[11,R[40],E,E,51,[[["self"]],[T]]],[11,R[18],E,E,51,[[["self"]],[R[41]]]],[11,R[12],E,E,51,[[["self"]],[T]]],[11,R[13],E,E,51,[[["self"]],[R[14]]]],[11,R[116],E,E,51,[[[T]],[T]]],[11,"cast",E,E,51,[[["self"]],[U]]],[11,R[117],E,E,51,[[["self"]],[U]]],[11,R[118],E,E,51,[[[T]],[T]]],[11,"from",R[108],E,52,[[[T]],[T]]],[11,"into",E,E,52,[[["self"]],[U]]],[11,R[16],E,E,52,[[["self"]],[T]]],[11,R[17],E,E,52,N],[11,R[11],E,E,52,[[[U]],[R[14]]]],[11,R[40],E,E,52,[[["self"]],[T]]],[11,R[18],E,E,52,[[["self"]],[R[41]]]],[11,R[12],E,E,52,[[["self"]],[T]]],[11,R[13],E,E,52,[[["self"]],[R[14]]]],[11,R[116],E,E,52,[[[T]],[T]]],[11,"cast",E,E,52,[[["self"]],[U]]],[11,R[117],E,E,52,[[["self"]],[U]]],[11,R[118],E,E,52,[[[T]],[T]]],[11,R[100],E,E,31,[[["self"]],["string"]]],[11,"from",E,E,31,[[[T]],[T]]],[11,"into",E,E,31,[[["self"]],[U]]],[11,R[16],E,E,31,[[["self"]],[T]]],[11,R[17],E,E,31,N],[11,R[11],E,E,31,[[[U]],[R[14]]]],[11,R[40],E,E,31,[[["self"]],[T]]],[11,R[18],E,E,31,[[["self"]],[R[41]]]],[11,R[12],E,E,31,[[["self"]],[T]]],[11,R[13],E,E,31,[[["self"]],[R[14]]]],[11,R[116],E,E,31,[[[T]],[T]]],[11,"cast",E,E,31,[[["self"]],[U]]],[11,R[117],E,E,31,[[["self"]],[U]]],[11,R[118],E,E,31,[[[T]],[T]]],[11,"from",E,E,53,[[[T]],[T]]],[11,"into",E,E,53,[[["self"]],[U]]],[11,R[16],E,E,53,[[["self"]],[T]]],[11,R[17],E,E,53,N],[11,R[11],E,E,53,[[[U]],[R[14]]]],[11,R[40],E,E,53,[[["self"]],[T]]],[11,R[18],E,E,53,[[["self"]],[R[41]]]],[11,R[12],E,E,53,[[["self"]],[T]]],[11,R[13],E,E,53,[[["self"]],[R[14]]]],[11,R[116],E,E,53,[[[T]],[T]]],[11,"cast",E,E,53,[[["self"]],[U]]],[11,R[117],E,E,53,[[["self"]],[U]]],[11,R[118],E,E,53,[[[T]],[T]]],[11,"from",E,E,34,[[[T]],[T]]],[11,"into",E,E,34,[[["self"]],[U]]],[11,R[11],E,E,34,[[[U]],[R[14]]]],[11,R[40],E,E,34,[[["self"]],[T]]],[11,R[18],E,E,34,[[["self"]],[R[41]]]],[11,R[12],E,E,34,[[["self"]],[T]]],[11,R[13],E,E,34,[[["self"]],[R[14]]]],[11,R[116],E,E,34,[[[T]],[T]]],[11,"cast",E,E,34,[[["self"]],[U]]],[11,R[117],E,E,34,[[["self"]],[U]]],[11,R[118],E,E,34,[[[T]],[T]]],[11,R[121],E,E,54,[[],["r"]]],[11,"from",E,E,54,[[[T]],[T]]],[11,"into",E,E,54,[[["self"]],[U]]],[11,R[16],E,E,54,[[["self"]],[T]]],[11,R[17],E,E,54,N],[11,R[11],E,E,54,[[[U]],[R[14]]]],[11,R[40],E,E,54,[[["self"]],[T]]],[11,R[18],E,E,54,[[["self"]],[R[41]]]],[11,R[12],E,E,54,[[["self"]],[T]]],[11,R[13],E,E,54,[[["self"]],[R[14]]]],[11,R[116],E,E,54,[[[T]],[T]]],[11,"cast",E,E,54,[[["self"]],[U]]],[11,R[117],E,E,54,[[["self"]],[U]]],[11,R[118],E,E,54,[[[T]],[T]]],[11,R[121],E,E,55,[[],["r"]]],[11,"from",E,E,55,[[[T]],[T]]],[11,"into",E,E,55,[[["self"]],[U]]],[11,R[16],E,E,55,[[["self"]],[T]]],[11,R[17],E,E,55,N],[11,R[11],E,E,55,[[[U]],[R[14]]]],[11,R[40],E,E,55,[[["self"]],[T]]],[11,R[18],E,E,55,[[["self"]],[R[41]]]],[11,R[12],E,E,55,[[["self"]],[T]]],[11,R[13],E,E,55,[[["self"]],[R[14]]]],[11,R[116],E,E,55,[[[T]],[T]]],[11,"cast",E,E,55,[[["self"]],[U]]],[11,R[117],E,E,55,[[["self"]],[U]]],[11,R[118],E,E,55,[[[T]],[T]]],[11,"from",E,E,56,[[[T]],[T]]],[11,"into",E,E,56,[[["self"]],[U]]],[11,R[16],E,E,56,[[["self"]],[T]]],[11,R[17],E,E,56,N],[11,R[11],E,E,56,[[[U]],[R[14]]]],[11,R[40],E,E,56,[[["self"]],[T]]],[11,R[18],E,E,56,[[["self"]],[R[41]]]],[11,R[12],E,E,56,[[["self"]],[T]]],[11,R[13],E,E,56,[[["self"]],[R[14]]]],[11,R[116],E,E,56,[[[T]],[T]]],[11,"cast",E,E,56,[[["self"]],[U]]],[11,R[117],E,E,56,[[["self"]],[U]]],[11,R[118],E,E,56,[[[T]],[T]]],[11,"from",R[122],E,32,[[[T]],[T]]],[11,"into",E,E,32,[[["self"]],[U]]],[11,R[11],E,E,32,[[[U]],[R[14]]]],[11,R[40],E,E,32,[[["self"]],[T]]],[11,R[18],E,E,32,[[["self"]],[R[41]]]],[11,R[12],E,E,32,[[["self"]],[T]]],[11,R[13],E,E,32,[[["self"]],[R[14]]]],[11,R[116],E,E,32,[[[T]],[T]]],[11,"cast",E,E,32,[[["self"]],[U]]],[11,R[117],E,E,32,[[["self"]],[U]]],[11,R[118],E,E,32,[[[T]],[T]]],[11,"from",E,E,33,[[[T]],[T]]],[11,"into",E,E,33,[[["self"]],[U]]],[11,R[16],E,E,33,[[["self"]],[T]]],[11,R[17],E,E,33,N],[11,R[11],E,E,33,[[[U]],[R[14]]]],[11,R[40],E,E,33,[[["self"]],[T]]],[11,R[18],E,E,33,[[["self"]],[R[41]]]],[11,R[12],E,E,33,[[["self"]],[T]]],[11,R[13],E,E,33,[[["self"]],[R[14]]]],[11,R[116],E,E,33,[[[T]],[T]]],[11,"cast",E,E,33,[[["self"]],[U]]],[11,R[117],E,E,33,[[["self"]],[U]]],[11,R[118],E,E,33,[[[T]],[T]]],[11,"from",R[123],E,35,[[[T]],[T]]],[11,"into",E,E,35,[[["self"]],[U]]],[11,R[16],E,E,35,[[["self"]],[T]]],[11,R[17],E,E,35,N],[11,R[11],E,E,35,[[[U]],[R[14]]]],[11,R[40],E,E,35,[[["self"]],[T]]],[11,R[18],E,E,35,[[["self"]],[R[41]]]],[11,R[12],E,E,35,[[["self"]],[T]]],[11,R[13],E,E,35,[[["self"]],[R[14]]]],[11,R[116],E,E,35,[[[T]],[T]]],[11,"cast",E,E,35,[[["self"]],[U]]],[11,R[117],E,E,35,[[["self"]],[U]]],[11,R[118],E,E,35,[[[T]],[T]]],[11,R[120],R[110],E,57,[[["self"]],["i"]]],[11,"from",E,E,57,[[[T]],[T]]],[11,"into",E,E,57,[[["self"]],[U]]],[11,R[11],E,E,57,[[[U]],[R[14]]]],[11,R[40],E,E,57,[[["self"]],[T]]],[11,R[18],E,E,57,[[["self"]],[R[41]]]],[11,R[12],E,E,57,[[["self"]],[T]]],[11,R[13],E,E,57,[[["self"]],[R[14]]]],[11,R[116],E,E,57,[[[T]],[T]]],[11,"cast",E,E,57,[[["self"]],[U]]],[11,R[117],E,E,57,[[["self"]],[U]]],[11,R[118],E,E,57,[[[T]],[T]]],[11,"from",R[124],E,36,[[[T]],[T]]],[11,"into",E,E,36,[[["self"]],[U]]],[11,R[16],E,E,36,[[["self"]],[T]]],[11,R[17],E,E,36,N],[11,R[11],E,E,36,[[[U]],[R[14]]]],[11,R[40],E,E,36,[[["self"]],[T]]],[11,R[18],E,E,36,[[["self"]],[R[41]]]],[11,R[12],E,E,36,[[["self"]],[T]]],[11,R[13],E,E,36,[[["self"]],[R[14]]]],[11,R[116],E,E,36,[[[T]],[T]]],[11,"cast",E,E,36,[[["self"]],[U]]],[11,R[117],E,E,36,[[["self"]],[U]]],[11,R[118],E,E,36,[[[T]],[T]]],[11,R[120],E,E,58,[[["self"]],["i"]]],[11,"from",E,E,58,[[[T]],[T]]],[11,"into",E,E,58,[[["self"]],[U]]],[11,R[11],E,E,58,[[[U]],[R[14]]]],[11,R[40],E,E,58,[[["self"]],[T]]],[11,R[18],E,E,58,[[["self"]],[R[41]]]],[11,R[12],E,E,58,[[["self"]],[T]]],[11,R[13],E,E,58,[[["self"]],[R[14]]]],[11,R[116],E,E,58,[[[T]],[T]]],[11,"cast",E,E,58,[[["self"]],[U]]],[11,R[117],E,E,58,[[["self"]],[U]]],[11,R[118],E,E,58,[[[T]],[T]]],[11,R[120],E,E,59,[[["self"]],["i"]]],[11,"from",E,E,59,[[[T]],[T]]],[11,"into",E,E,59,[[["self"]],[U]]],[11,R[16],E,E,59,[[["self"]],[T]]],[11,R[17],E,E,59,N],[11,R[11],E,E,59,[[[U]],[R[14]]]],[11,R[40],E,E,59,[[["self"]],[T]]],[11,R[18],E,E,59,[[["self"]],[R[41]]]],[11,R[12],E,E,59,[[["self"]],[T]]],[11,R[13],E,E,59,[[["self"]],[R[14]]]],[11,R[116],E,E,59,[[[T]],[T]]],[11,"cast",E,E,59,[[["self"]],[U]]],[11,R[117],E,E,59,[[["self"]],[U]]],[11,R[118],E,E,59,[[[T]],[T]]],[11,"fmt",R[108],E,52,[[["self"],[R[28]]],[R[14],["error"]]]],[11,"fmt",E,E,31,[[["self"],[R[28]]],[R[14],["error"]]]],[11,"eq",E,E,31,[[["self"],[R[96]]],["bool"]]],[11,R[29],E,E,31,[[["self"]],["str"]]],[11,"from","rand",E,3,[[[R[96]]],["error"]]],[11,"fmt",R[108],E,31,[[["self"],[R[28]]],[R[14],["error"]]]],[11,R[19],E,E,52,[[["self"]],["u32"]]],[11,R[20],E,E,52,[[["self"]],["u64"]]],[11,R[21],E,E,52,N],[11,R[22],E,E,52,N],[11,"clone",E,E,52,[[["self"]],[R[97]]]],[11,"clone",E,E,31,[[["self"]],[R[96]]]],[11,"read","rand",E,0,N],[11,"fmt",E,E,3,[[["self"],[R[28]]],[R[14],["error"]]]],[11,"fmt",E,E,2,[[["self"],[R[28]]],[R[14],["error"]]]],[11,"fmt",E,E,3,[[["self"],[R[28]]],[R[14],["error"]]]],[11,"eq",E,E,2,[[["self"],[R[1]]],["bool"]]],[11,"clone",E,E,2,[[["self"]],[R[1]]]],[11,R[29],E,E,3,[[["self"]],["str"]]],[11,"cause",E,E,3,[[["self"]],["option",["error"]]]],[11,R[19],R[108],E,53,[[["self"]],["u32"]]],[11,R[20],E,E,53,[[["self"]],["u64"]]],[11,R[21],E,E,53,N],[11,R[22],E,E,53,N],[11,"fmt",E,E,53,[[["self"],[R[28]]],[R[14],["error"]]]],[11,"clone",E,E,53,[[["self"]],["osrng"]]],[11,"new",R[119],E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,N],[11,R[125],E,E,49,N],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,N],[11,R[125],E,E,49,N],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,N],[11,R[125],E,E,49,N],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,N],[11,R[125],E,E,49,N],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,N],[11,R[125],E,E,49,N],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,N],[11,R[125],E,E,49,N],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,N],[11,R[125],E,E,49,N],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,N],[11,R[125],E,E,49,N],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,N],[11,R[125],E,E,49,N],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,N],[11,R[125],E,E,49,N],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,N],[11,R[125],E,E,49,N],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,N],[11,R[125],E,E,49,N],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,N],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,N],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,N],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,N],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,N],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,N],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,N],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,N],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,N],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,N],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,N],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,N],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,N],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,N],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,N],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,N],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,N],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,N],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,N],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,N],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,N],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,N],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,N],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,N],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,N],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,N],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,N],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,N],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,N],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,N],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,N],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,N],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,N],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,N],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,N],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,N],[11,"new",E,E,50,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,50,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,50,N],[11,R[125],E,E,50,N],[11,"new",E,E,50,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,50,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,50,N],[11,R[125],E,E,50,N],[11,"new",E,E,50,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,50,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,50,N],[11,R[125],E,E,50,N],[11,"new",E,E,50,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,50,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,50,N],[11,R[125],E,E,50,N],[11,"new",E,E,50,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,50,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,50,N],[11,R[125],E,E,50,N],[11,"new",E,E,50,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,50,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,50,N],[11,R[125],E,E,50,N],[11,"new",E,E,50,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,50,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,50,N],[11,R[125],E,E,50,N],[11,"new",E,E,50,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,50,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,50,N],[11,R[125],E,E,50,N],[11,"new",E,E,50,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,50,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,50,N],[11,R[125],E,E,50,N],[11,"new",E,E,51,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,51,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,51,[[["self"],["r"]],["duration"]]],[11,"sample",E,E,9,[[["self"],["r"]],["x"]]],[11,"sample",R[105],E,10,[[["self"],["r"]],["bool"]]],[11,"sample",E,E,11,[[["self"],["r"]],[R[9]]]],[11,"sample",E,E,12,N],[11,"sample",E,E,13,N],[11,"sample",E,E,14,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,15,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,16,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,17,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,18,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,45,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,19,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,20,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,46,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,21,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,22,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,23,[[["self"],["r"]],["u64"]]],[11,"sample",E,E,24,[[["self"],["r"]],["u64"]]],[11,"sample",E,E,25,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,26,[[["self"],["r"]],["vec",["f64"]]]],[11,"sample",E,E,27,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,28,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,48,[[["self"],["r"]],["f32"]]],[11,"sample",E,E,43,[[["self"],["r"]],["f32"]]],[11,"sample",E,E,44,[[["self"],["r"]],["f32"]]],[11,"sample",E,E,48,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,43,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,44,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,48,[[["self"],["r"]],["f32x2"]]],[11,"sample",E,E,43,[[["self"],["r"]],["f32x2"]]],[11,"sample",E,E,44,[[["self"],["r"]],["f32x2"]]],[11,"sample",E,E,48,[[["self"],["r"]],["f32x4"]]],[11,"sample",E,E,43,[[["self"],["r"]],["f32x4"]]],[11,"sample",E,E,44,[[["self"],["r"]],["f32x4"]]],[11,"sample",E,E,48,[[["self"],["r"]],["f32x8"]]],[11,"sample",E,E,43,[[["self"],["r"]],["f32x8"]]],[11,"sample",E,E,44,[[["self"],["r"]],["f32x8"]]],[11,"sample",E,E,48,[[["self"],["r"]],["f32x16"]]],[11,"sample",E,E,43,[[["self"],["r"]],["f32x16"]]],[11,"sample",E,E,44,[[["self"],["r"]],["f32x16"]]],[11,"sample",E,E,48,[[["self"],["r"]],["f64x2"]]],[11,"sample",E,E,43,[[["self"],["r"]],["f64x2"]]],[11,"sample",E,E,44,[[["self"],["r"]],["f64x2"]]],[11,"sample",E,E,48,[[["self"],["r"]],["f64x4"]]],[11,"sample",E,E,43,[[["self"],["r"]],["f64x4"]]],[11,"sample",E,E,44,[[["self"],["r"]],["f64x4"]]],[11,"sample",E,E,48,[[["self"],["r"]],["f64x8"]]],[11,"sample",E,E,43,[[["self"],["r"]],["f64x8"]]],[11,"sample",E,E,44,[[["self"],["r"]],["f64x8"]]],[11,"sample",E,E,48,[[["self"],["r"]],["u8"]]],[11,"sample",E,E,48,[[["self"],["r"]],["u16"]]],[11,"sample",E,E,48,[[["self"],["r"]],["u32"]]],[11,"sample",E,E,48,[[["self"],["r"]],["u64"]]],[11,"sample",E,E,48,[[["self"],["r"]],["u128"]]],[11,"sample",E,E,48,[[["self"],["r"]],[R[9]]]],[11,"sample",E,E,48,[[["self"],["r"]],["i8"]]],[11,"sample",E,E,48,[[["self"],["r"]],["i16"]]],[11,"sample",E,E,48,[[["self"],["r"]],["i32"]]],[11,"sample",E,E,48,[[["self"],["r"]],["i64"]]],[11,"sample",E,E,48,[[["self"],["r"]],["i128"]]],[11,"sample",E,E,48,[[["self"],["r"]],["isize"]]],[11,"sample",E,E,48,[[["self"],["r"]],["nonzerou8"]]],[11,"sample",E,E,48,[[["self"],["r"]],["nonzerou16"]]],[11,"sample",E,E,48,[[["self"],["r"]],["nonzerou32"]]],[11,"sample",E,E,48,[[["self"],["r"]],["nonzerou64"]]],[11,"sample",E,E,48,[[["self"],["r"]],["nonzerou128"]]],[11,"sample",E,E,48,[[["self"],["r"]],["nonzerousize"]]],[11,"sample",E,E,48,[[["self"],["r"]],["i8x2"]]],[11,"sample",E,E,48,[[["self"],["r"]],["u8x2"]]],[11,"sample",E,E,48,[[["self"],["r"]],["i16x2"]]],[11,"sample",E,E,48,[[["self"],["r"]],["u16x2"]]],[11,"sample",E,E,48,[[["self"],["r"]],["i8x4"]]],[11,"sample",E,E,48,[[["self"],["r"]],["u8x4"]]],[11,"sample",E,E,48,[[["self"],["r"]],["i32x2"]]],[11,"sample",E,E,48,[[["self"],["r"]],["u32x2"]]],[11,"sample",E,E,48,[[["self"],["r"]],["i16x4"]]],[11,"sample",E,E,48,[[["self"],["r"]],["u16x4"]]],[11,"sample",E,E,48,[[["self"],["r"]],["i8x8"]]],[11,"sample",E,E,48,[[["self"],["r"]],["u8x8"]]],[11,"sample",E,E,48,[[["self"],["r"]],["i64x2"]]],[11,"sample",E,E,48,[[["self"],["r"]],["u64x2"]]],[11,"sample",E,E,48,[[["self"],["r"]],["i32x4"]]],[11,"sample",E,E,48,[[["self"],["r"]],["u32x4"]]],[11,"sample",E,E,48,[[["self"],["r"]],["i16x8"]]],[11,"sample",E,E,48,[[["self"],["r"]],["u16x8"]]],[11,"sample",E,E,48,[[["self"],["r"]],["i8x16"]]],[11,"sample",E,E,48,[[["self"],["r"]],["u8x16"]]],[11,"sample",E,E,48,[[["self"],["r"]],["i64x4"]]],[11,"sample",E,E,48,[[["self"],["r"]],["u64x4"]]],[11,"sample",E,E,48,[[["self"],["r"]],["i32x8"]]],[11,"sample",E,E,48,[[["self"],["r"]],["u32x8"]]],[11,"sample",E,E,48,[[["self"],["r"]],["i16x16"]]],[11,"sample",E,E,48,[[["self"],["r"]],["u16x16"]]],[11,"sample",E,E,48,[[["self"],["r"]],["i8x32"]]],[11,"sample",E,E,48,[[["self"],["r"]],["u8x32"]]],[11,"sample",E,E,48,[[["self"],["r"]],["i64x8"]]],[11,"sample",E,E,48,[[["self"],["r"]],["u64x8"]]],[11,"sample",E,E,48,[[["self"],["r"]],["i32x16"]]],[11,"sample",E,E,48,[[["self"],["r"]],["u32x16"]]],[11,"sample",E,E,48,[[["self"],["r"]],["i16x32"]]],[11,"sample",E,E,48,[[["self"],["r"]],["u16x32"]]],[11,"sample",E,E,48,[[["self"],["r"]],["i8x64"]]],[11,"sample",E,E,48,[[["self"],["r"]],["u8x64"]]],[11,"sample",E,E,48,[[["self"],["r"]],["__m64"]]],[11,"sample",E,E,48,[[["self"],["r"]],["__m128i"]]],[11,"sample",E,E,48,[[["self"],["r"]],["__m256i"]]],[11,"sample",E,E,48,[[["self"],["r"]],["char"]]],[11,"sample",E,E,42,[[["self"],["r"]],["char"]]],[11,"sample",E,E,48,[[["self"],["r"]],["bool"]]],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,N],[11,"sample",E,E,48,[[["self"],["r"]],["option"]]],[11,"sample",E,E,48,[[["self"],["r"]],["wrapping"]]],[11,"sample",E,E,30,[[["self"],["r"]],[T]]],[11,"next",E,E,47,[[["self"]],["option"]]],[11,R[126],E,E,47,N],[11,"next",R[124],E,58,[[["self"]],["option",[R[9]]]]],[11,R[126],E,E,58,N],[11,"next",E,E,59,[[["self"]],["option"]]],[11,R[126],E,E,59,N],[11,"next",R[110],E,57,[[["self"]],["option"]]],[11,R[126],E,E,57,N],[11,"len",E,E,57,[[["self"]],[R[9]]]],[11,"eq",R[105],E,5,[[["self"],[R[111]]],["bool"]]],[11,"eq",R[124],E,36,[[["self"],[R[134]]],["bool"]]],[11,"default",R[108],E,34,[[],["self"]]],[11,"default",E,E,56,[[],[R[127]]]],[11,"clone",R[119],E,9,[[["self"]],[R[136]]]],[11,"clone",E,E,49,[[["self"]],["uniformint"]]],[11,"clone",E,E,50,[[["self"]],["uniformfloat"]]],[11,"clone",E,E,51,[[["self"]],["uniformduration"]]],[11,"clone",R[105],E,10,[[["self"]],[R[106]]]],[11,"clone",E,E,11,[[["self"]],[R[128]]]],[11,"clone",E,E,5,[[["self"]],[R[111]]]],[11,"clone",E,E,12,[[["self"]],[R[129]]]],[11,"clone",E,E,13,[[["self"]],[R[130]]]],[11,"clone",E,E,14,[[["self"]],["gamma"]]],[11,"clone",E,E,15,[[["self"]],[R[131]]]],[11,"clone",E,E,16,[[["self"]],["fisherf"]]],[11,"clone",E,E,17,[[["self"]],["studentt"]]],[11,"clone",E,E,18,[[["self"]],["beta"]]],[11,"clone",E,E,45,[[["self"]],["standardnormal"]]],[11,"clone",E,E,19,[[["self"]],["normal"]]],[11,"clone",E,E,20,[[["self"]],[R[132]]]],[11,"clone",E,E,46,[[["self"]],["exp1"]]],[11,"clone",E,E,21,[[["self"]],["exp"]]],[11,"clone",E,E,22,[[["self"]],["pareto"]]],[11,"clone",E,E,23,[[["self"]],["poisson"]]],[11,"clone",E,E,24,[[["self"]],["binomial"]]],[11,"clone",E,E,25,[[["self"]],["cauchy"]]],[11,"clone",E,E,26,[[["self"]],[R[107]]]],[11,"clone",E,E,27,[[["self"]],[R[133]]]],[11,"clone",E,E,28,[[["self"]],["weibull"]]],[11,"clone",E,E,43,[[["self"]],["openclosed01"]]],[11,"clone",E,E,44,[[["self"]],["open01"]]],[11,"clone",E,E,48,[[["self"]],["standard"]]],[11,"clone",E,E,4,[[["self"]],["weighted"]]],[11,"clone",R[122],E,33,[[["self"]],["reseedingrng"]]],[11,"clone",R[123],E,35,[[["self"]],["steprng"]]],[11,"clone",R[108],E,54,[[["self"]],["smallrng"]]],[11,"clone",E,E,55,[[["self"]],["stdrng"]]],[11,"clone",E,E,56,[[["self"]],[R[127]]]],[11,"clone",R[124],E,36,[[["self"]],[R[134]]]],[11,"clone",E,E,59,[[["self"]],[R[135]]]],[11,"from",R[119],E,9,[[["range"]],[R[136]]]],[11,"from",E,E,9,[[["rangeinclusive"]],[R[136]]]],[11,"from",R[124],E,36,[[["vec",["u32"]]],["self"]]],[11,"from",E,E,36,[[["vec",[R[9]]]],["self"]]],[11,"fmt",R[105],E,5,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",R[119],E,9,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,49,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,50,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,51,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",R[105],E,10,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,11,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,5,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,12,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,13,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,14,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,15,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,16,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,17,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,18,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,45,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,19,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,20,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,46,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,21,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,22,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,23,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,24,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,25,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,26,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,27,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,28,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,43,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,44,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,42,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,47,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,48,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,4,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,30,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",R[122],E,32,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,33,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",R[108],E,34,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",R[123],E,35,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",R[108],E,54,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,55,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,56,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",R[124],E,36,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,58,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,59,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",R[110],E,57,[[["self"],[R[28]]],[R[14]]]],[11,R[29],R[105],E,5,[[["self"]],["str"]]],[11,"cause",E,E,5,[[["self"]],["option",["error"]]]],[11,R[19],R[122],E,32,[[["self"]],["u32"]]],[11,R[20],E,E,32,[[["self"]],["u64"]]],[11,R[21],E,E,32,N],[11,R[22],E,E,32,N],[11,R[19],E,E,33,[[["self"]],["u32"]]],[11,R[20],E,E,33,[[["self"]],["u64"]]],[11,R[21],E,E,33,N],[11,R[22],E,E,33,N],[11,R[19],R[108],E,34,[[["self"]],["u32"]]],[11,R[20],E,E,34,[[["self"]],["u64"]]],[11,R[21],E,E,34,N],[11,R[22],E,E,34,N],[11,R[19],R[123],E,35,[[["self"]],["u32"]]],[11,R[20],E,E,35,[[["self"]],["u64"]]],[11,R[21],E,E,35,N],[11,R[22],E,E,35,N],[11,R[19],R[108],E,54,[[["self"]],["u32"]]],[11,R[20],E,E,54,[[["self"]],["u64"]]],[11,R[21],E,E,54,N],[11,R[22],E,E,54,N],[11,R[19],E,E,55,[[["self"]],["u32"]]],[11,R[20],E,E,55,[[["self"]],["u64"]]],[11,R[21],E,E,55,N],[11,R[22],E,E,55,N],[11,R[19],E,E,56,[[["self"]],["u32"]]],[11,R[20],E,E,56,[[["self"]],["u64"]]],[11,R[21],E,E,56,N],[11,R[22],E,E,56,N],[11,R[23],E,E,54,N],[11,R[25],E,E,54,[[["r"]],[R[14],["error"]]]],[11,R[23],E,E,55,N],[11,R[25],E,E,55,[[["r"]],[R[14],["error"]]]],[11,R[180],"rand",R[181],2,[[["self"]],["bool"]]],[11,R[182],E,R[183],2,[[["self"]],["bool"]]],[11,R[29],E,R[184],2,[[["self"]],["str"]]],[11,"new",E,R[185],3,[[[R[1]],["str"]],["error"]]],[11,R[186],E,R[187],3,[[[R[1]],["str"],["e"]],["error"]]],[11,R[188],E,R[189],3,[[["self"]],["option",["box"]]]],[11,"new",R[108],R[213],52,[[],[R[14],[R[97],R[96]]]]],[11,R[214],E,R[215],52,N],[11,R[216],E,R[217],52,N],[11,R[218],E,R[219],52,[[["self"]],[R[14],["u8",R[96]]]]],[11,R[220],E,R[221],52,[[["self"],["bool"]],["i64"]]],[11,"new",E,R[168],53,[[],[R[14],["osrng","error"]]]]],"p":[[8,"RngCore"],[8,R[36]],[4,R[32]],[3,"Error"],[3,"Weighted"],[4,R[137]],[8,R[138]],[8,R[139]],[8,R[140]],[3,"Uniform"],[3,R[141]],[3,R[142]],[3,R[143]],[3,R[144]],[3,"Gamma"],[3,R[145]],[3,"FisherF"],[3,"StudentT"],[3,"Beta"],[3,"Normal"],[3,R[146]],[3,"Exp"],[3,"Pareto"],[3,"Poisson"],[3,"Binomial"],[3,"Cauchy"],[3,R[147]],[3,R[148]],[3,"Weibull"],[8,R[149]],[3,R[150]],[4,R[98]],[3,"ReadRng"],[3,R[151]],[3,R[152]],[3,"StepRng"],[4,"IndexVec"],[8,R[153]],[8,R[154]],[8,"Rng"],[8,R[155]],[8,R[156]],[3,R[157]],[3,R[158]],[3,"Open01"],[3,R[159]],[3,"Exp1"],[3,"DistIter"],[3,"Standard"],[3,R[160]],[3,R[161]],[3,R[162]],[3,R[99]],[3,"OsRng"],[3,"SmallRng"],[3,"StdRng"],[3,R[163]],[3,R[164]],[4,R[165]],[4,R[166]]]};
searchIndex["rand_hc"]={"doc":"The HC128 random number generator.","i":[[3,R[42],"rand_hc",R[92],N,N],[3,R[43],E,"The core of `Hc128Rng`, used with `BlockRng`.",N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,R[11],E,E,0,[[[U]],[R[14]]]],[11,R[13],E,E,0,[[["self"]],[R[14]]]],[11,"into",E,E,0,[[["self"]],[U]]],[11,R[40],E,E,0,[[["self"]],[T]]],[11,R[12],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[["self"]],[R[41]]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,N],[11,"from",E,E,1,[[[T]],[T]]],[11,R[11],E,E,1,[[[U]],[R[14]]]],[11,R[13],E,E,1,[[["self"]],[R[14]]]],[11,"into",E,E,1,[[["self"]],[U]]],[11,R[40],E,E,1,[[["self"]],[T]]],[11,R[12],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[["self"]],[R[41]]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[17],E,E,1,N],[11,"fmt",E,E,0,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,1,[[["self"],[R[28]]],[R[14]]]],[11,"clone",E,E,0,[[["self"]],["hc128rng"]]],[11,"clone",E,E,1,[[["self"]],["hc128core"]]],[11,R[44],E,E,1,N],[11,R[23],E,E,0,N],[11,R[25],E,E,0,[[["r"]],[R[14],["error"]]]],[11,R[23],E,"Create an HC-128 random number generator with a seed. The…",1,N],[11,R[19],E,E,0,[[["self"]],["u32"]]],[11,R[20],E,E,0,[[["self"]],["u64"]]],[11,R[21],E,E,0,N],[11,R[22],E,E,0,N]],"p":[[3,R[42]],[3,R[43]]]};
searchIndex["rand_os"]={"doc":"Interface to the random number generator of the operating…","i":[[3,"OsRng","rand_os",R[167],N,N],[11,"new",E,R[168],0,[[],[R[14],["osrng","error"]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[["self"]],[U]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,N],[11,R[11],E,E,0,[[[U]],[R[14]]]],[11,R[40],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[["self"]],[R[41]]]],[11,R[12],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[R[14]]]],[11,"clone",E,E,0,[[["self"]],["osrng"]]],[11,"fmt",E,E,0,[[["self"],[R[28]]],[R[14]]]],[11,R[19],E,E,0,[[["self"]],["u32"]]],[11,R[20],E,E,0,[[["self"]],["u64"]]],[11,R[21],E,E,0,N],[11,R[22],E,E,0,N]],"p":[[3,"OsRng"]]};
searchIndex[R[222]]={"doc":E,"i":[[5,"generate_from_seed",R[222],E,N,[[["u32"]],["i32"]]],[5,"generate_from_os_rand",E,E,N,[[],["i32"]]],[5,"generate_from_entropy",E,E,N,[[],["i32"]]],[0,"tests",E,E,N,N],[5,"__wbg_test_generate_from_seed_0","rand_wasm_bindgen_test::tests",E,N,N],[5,"__wbg_test_generate_from_os_rand_1",E,E,N,N],[5,"__wbg_test_generate_from_entropy_2",E,E,N,N]],"p":[]};
searchIndex[R[0]]={"doc":"Random number generation traits","i":[[3,"Error",R[0],R[169],N,N],[12,"kind",E,R[170],0,N],[12,"msg",E,R[171],0,N],[4,R[32],E,R[172],N,N],[13,R[173],E,R[174],1,N],[13,R[175],E,R[176],1,N],[13,R[177],E,R[178],1,N],[13,"NotReady",E,R[179],1,N],[11,R[180],E,R[181],1,[[["self"]],["bool"]]],[11,R[182],E,R[183],1,[[["self"]],["bool"]]],[11,R[29],E,R[184],1,[[["self"]],["str"]]],[11,"new",E,R[185],0,[[[R[1]],["str"]],["self"]]],[11,R[186],E,R[187],0,[[[R[1]],["str"],["e"]],["self"]]],[11,R[188],E,R[189],0,[[["self"]],["option",["box"]]]],[0,"block",E,"The `BlockRngCore` trait and implementation helpers",N,N],[3,R[33],R[15],R[2],N,N],[12,"core",E,R[3],2,N],[3,R[34],E,R[2],N,N],[12,"core",E,R[3],3,N],[8,R[35],E,"A trait for RNGs which do not generate random numbers…",N,N],[16,"Item",E,"Results element type, e.g. `u32`.",4,N],[16,"Results",E,"Results type. This is the 'block' an RNG implementing…",4,N],[10,R[44],E,"Generate a new block of results.",4,N],[11,"new",E,R[4],2,[[["r"]],[R[26]]]],[11,"index",E,R[5],2,[[["self"]],[R[9]]]],[11,"reset",E,R[6],2,[[["self"]]]],[11,R[7],E,R[8],2,[[["self"],[R[9]]]]],[11,"new",E,R[4],3,[[["r"]],[R[27]]]],[11,"index",E,R[5],3,[[["self"]],[R[9]]]],[11,"reset",E,R[6],3,[[["self"]]]],[11,R[7],E,R[8],3,[[["self"],[R[9]]]]],[0,"impls",R[0],"Helper functions for implementing `RngCore` functions.",N,N],[5,"next_u64_via_u32","rand_core::impls","Implement `next_u64` via `next_u32`, little-endian order.",N,[[["r"]],["u64"]]],[5,"fill_bytes_via_next",E,"Implement `fill_bytes` via `next_u64` and `next_u32`,…",N,N],[5,"fill_via_u32_chunks",E,R[10],N,N],[5,"fill_via_u64_chunks",E,R[10],N,N],[5,"next_u32_via_fill",E,"Implement `next_u32` via `fill_bytes`, little-endian order.",N,[[["r"]],["u32"]]],[5,"next_u64_via_fill",E,"Implement `next_u64` via `fill_bytes`, little-endian order.",N,[[["r"]],["u64"]]],[0,"le",R[0],"Little-Endian utilities",N,N],[5,"read_u32_into","rand_core::le","Reads unsigned 32 bit integers from `src` into `dst`.…",N,N],[5,"read_u64_into",E,"Reads unsigned 64 bit integers from `src` into `dst`.…",N,N],[8,"RngCore",R[0],R[190],N,N],[10,R[19],E,R[191],5,[[["self"]],["u32"]]],[10,R[20],E,R[192],5,[[["self"]],["u64"]]],[10,R[21],E,R[193],5,N],[10,R[22],E,R[194],5,N],[8,R[195],E,R[196],N,N],[8,R[36],E,R[197],N,N],[16,"Seed",E,R[198],6,N],[10,R[23],E,R[199],6,N],[11,R[24],E,R[200],6,[[["u64"]],["self"]]],[11,R[25],E,R[201],6,[[["r"]],[R[14],["error"]]]],[11,R[100],E,E,0,[[["self"]],["string"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[["self"]],[U]]],[11,R[11],E,E,0,[[[U]],[R[14]]]],[11,R[40],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[["self"]],[R[41]]]],[11,R[12],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[R[14]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[["self"]],[U]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[17],E,E,1,N],[11,R[11],E,E,1,[[[U]],[R[14]]]],[11,R[40],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[["self"]],[R[41]]]],[11,R[12],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[R[14]]]],[11,"from",R[15],E,2,[[[T]],[T]]],[11,"into",E,E,2,[[["self"]],[U]]],[11,R[16],E,E,2,[[["self"]],[T]]],[11,R[17],E,E,2,N],[11,R[11],E,E,2,[[[U]],[R[14]]]],[11,R[40],E,E,2,[[["self"]],[T]]],[11,R[18],E,E,2,[[["self"]],[R[41]]]],[11,R[12],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[R[14]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[["self"]],[U]]],[11,R[16],E,E,3,[[["self"]],[T]]],[11,R[17],E,E,3,N],[11,R[11],E,E,3,[[[U]],[R[14]]]],[11,R[40],E,E,3,[[["self"]],[T]]],[11,R[18],E,E,3,[[["self"]],[R[41]]]],[11,R[12],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[R[14]]]],[11,R[19],E,E,2,[[["self"]],["u32"]]],[11,R[20],E,E,2,[[["self"]],["u64"]]],[11,R[21],E,E,2,N],[11,R[22],E,E,2,N],[11,R[19],E,E,3,[[["self"]],["u32"]]],[11,R[20],E,E,3,[[["self"]],["u64"]]],[11,R[21],E,E,3,N],[11,R[22],E,E,3,N],[11,R[23],E,E,2,N],[11,R[24],E,E,2,[[["u64"]],["self"]]],[11,R[25],E,E,2,[[["s"]],[R[14],["error"]]]],[11,R[23],E,E,3,N],[11,R[24],E,E,3,[[["u64"]],["self"]]],[11,R[25],E,E,3,[[["s"]],[R[14],["error"]]]],[11,"eq",R[0],E,1,[[["self"],[R[1]]],["bool"]]],[11,"clone",E,E,1,[[["self"]],[R[1]]]],[11,"clone",R[15],E,2,[[["self"]],[R[26]]]],[11,"clone",E,E,3,[[["self"]],[R[27]]]],[11,"fmt",R[0],E,0,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,1,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,0,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",R[15],E,2,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,3,[[["self"],[R[28]]],[R[14]]]],[11,"read",R[0],E,5,N],[11,R[29],E,E,0,[[["self"]],["str"]]],[11,"cause",E,E,0,[[["self"]],["option",["stderror"]]]],[11,R[30],R[15],E,2,[[["self"],["__s"]],[R[14]]]],[11,R[30],E,E,3,[[["self"],["__s"]],[R[14]]]],[11,R[31],E,E,2,[[["__d"]],[R[14]]]],[11,R[31],E,E,3,[[["__d"]],[R[14]]]]],"p":[[3,"Error"],[4,R[32]],[3,R[33]],[3,R[34]],[8,R[35]],[8,"RngCore"],[8,R[36]]]};
searchIndex[R[37]]={"doc":"The PCG random number generators.","i":[[3,R[38],R[37],"A PCG random number generator (XSH RR 64/32 (LCG) variant).",N,N],[3,R[39],E,"A PCG random number generator (XSL 128/64 (MCG) variant).",N,N],[11,"new",E,"Construct an instance compatible with PCG seed and stream.",0,[[["u64"],["u64"]],["self"]]],[11,"new",E,"Construct an instance compatible with PCG seed.",1,[[["u128"]],["self"]]],[6,"Pcg32",E,"`Lcg64Xsh32` is also officially known as `pcg32`.",N,N],[6,"Pcg64Mcg",E,"A friendly name for `Mcg128Xsl64`.",N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,R[11],E,E,0,[[[U]],[R[14]]]],[11,R[13],E,E,0,[[["self"]],[R[14]]]],[11,"into",E,E,0,[[["self"]],[U]]],[11,R[40],E,E,0,[[["self"]],[T]]],[11,R[12],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[["self"]],[R[41]]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,N],[11,"from",E,E,1,[[[T]],[T]]],[11,R[11],E,E,1,[[[U]],[R[14]]]],[11,R[13],E,E,1,[[["self"]],[R[14]]]],[11,"into",E,E,1,[[["self"]],[U]]],[11,R[40],E,E,1,[[["self"]],[T]]],[11,R[12],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[["self"]],[R[41]]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[17],E,E,1,N],[11,"fmt",E,E,0,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,1,[[["self"],[R[28]]],[R[14]]]],[11,"clone",E,E,0,[[["self"]],["lcg64xsh32"]]],[11,"clone",E,E,1,[[["self"]],["mcg128xsl64"]]],[11,R[23],E,E,0,N],[11,R[23],E,E,1,N],[11,R[19],E,E,0,[[["self"]],["u32"]]],[11,R[20],E,E,0,[[["self"]],["u64"]]],[11,R[21],E,E,0,N],[11,R[22],E,E,0,N],[11,R[19],E,E,1,[[["self"]],["u32"]]],[11,R[20],E,E,1,[[["self"]],["u64"]]],[11,R[21],E,E,1,N],[11,R[22],E,E,1,N],[11,R[30],E,E,0,[[["self"],["__s"]],[R[14]]]],[11,R[30],E,E,1,[[["self"],["__s"]],[R[14]]]],[11,R[31],E,E,0,[[["__d"]],[R[14]]]],[11,R[31],E,E,1,[[["__d"]],[R[14]]]]],"p":[[3,R[38]],[3,R[39]]]};
searchIndex[R[45]]={"doc":"This crate implements the [xoshiro] family of pseudorandom…","i":[[3,R[73],R[45],"A splitmix64 random number generator.",N,N],[3,R[65],E,"A xoshiro128** random number generator.",N,N],[3,R[66],E,"A xoshiro128+ random number generator.",N,N],[3,R[67],E,"A xoshiro256** random number generator.",N,N],[3,R[68],E,"A xoshiro256+ random number generator.",N,N],[3,"Seed512",E,"512-bit seed for a generator.",N,N],[12,"0",E,E,0,N],[3,R[69],E,"A xoshiro512** random number generator.",N,N],[3,R[70],E,"A xoshiro512+ random number generator.",N,N],[3,R[71],E,"A xoroshiro128+ random number generator.",N,N],[3,R[72],E,"A xoroshiro128** random number generator.",N,N],[3,R[74],E,"A Xoroshiro64** random number generator.",N,N],[3,R[75],E,"A xoroshiro64* random number generator.",N,N],[11,"iter",E,"Return an iterator over the seed.",0,[[["self"]],["iter",["u8"]]]],[11,"jump",E,R[46],1,[[["self"]]]],[11,"jump",E,R[46],2,[[["self"]]]],[11,"jump",E,R[47],3,[[["self"]]]],[11,R[48],E,R[49],3,[[["self"]]]],[11,"jump",E,R[47],4,[[["self"]]]],[11,R[48],E,R[49],4,[[["self"]]]],[11,"jump",E,R[50],5,[[["self"]]]],[11,"jump",E,R[50],6,[[["self"]]]],[11,"jump",E,R[51],7,[[["self"]]]],[11,R[48],E,R[52],7,[[["self"]]]],[11,"jump",E,R[51],8,[[["self"]]]],[11,R[48],E,R[52],8,[[["self"]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[11],E,E,9,[[[U]],[R[14]]]],[11,R[13],E,E,9,[[["self"]],[R[14]]]],[11,"into",E,E,9,[[["self"]],[U]]],[11,R[40],E,E,9,[[["self"]],[T]]],[11,R[12],E,E,9,[[["self"]],[T]]],[11,R[18],E,E,9,[[["self"]],[R[41]]]],[11,R[16],E,E,9,[[["self"]],[T]]],[11,R[17],E,E,9,N],[11,"from",E,E,1,[[[T]],[T]]],[11,R[11],E,E,1,[[[U]],[R[14]]]],[11,R[13],E,E,1,[[["self"]],[R[14]]]],[11,"into",E,E,1,[[["self"]],[U]]],[11,R[40],E,E,1,[[["self"]],[T]]],[11,R[12],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[["self"]],[R[41]]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[17],E,E,1,N],[11,"from",E,E,2,[[[T]],[T]]],[11,R[11],E,E,2,[[[U]],[R[14]]]],[11,R[13],E,E,2,[[["self"]],[R[14]]]],[11,"into",E,E,2,[[["self"]],[U]]],[11,R[40],E,E,2,[[["self"]],[T]]],[11,R[12],E,E,2,[[["self"]],[T]]],[11,R[18],E,E,2,[[["self"]],[R[41]]]],[11,R[16],E,E,2,[[["self"]],[T]]],[11,R[17],E,E,2,N],[11,"from",E,E,3,[[[T]],[T]]],[11,R[11],E,E,3,[[[U]],[R[14]]]],[11,R[13],E,E,3,[[["self"]],[R[14]]]],[11,"into",E,E,3,[[["self"]],[U]]],[11,R[40],E,E,3,[[["self"]],[T]]],[11,R[12],E,E,3,[[["self"]],[T]]],[11,R[18],E,E,3,[[["self"]],[R[41]]]],[11,R[16],E,E,3,[[["self"]],[T]]],[11,R[17],E,E,3,N],[11,"from",E,E,4,[[[T]],[T]]],[11,R[11],E,E,4,[[[U]],[R[14]]]],[11,R[13],E,E,4,[[["self"]],[R[14]]]],[11,"into",E,E,4,[[["self"]],[U]]],[11,R[40],E,E,4,[[["self"]],[T]]],[11,R[12],E,E,4,[[["self"]],[T]]],[11,R[18],E,E,4,[[["self"]],[R[41]]]],[11,R[16],E,E,4,[[["self"]],[T]]],[11,R[17],E,E,4,N],[11,"from",E,E,0,[[[T]],[T]]],[11,R[11],E,E,0,[[[U]],[R[14]]]],[11,R[13],E,E,0,[[["self"]],[R[14]]]],[11,"into",E,E,0,[[["self"]],[U]]],[11,R[40],E,E,0,[[["self"]],[T]]],[11,R[12],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[["self"]],[R[41]]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,N],[11,"from",E,E,5,[[[T]],[T]]],[11,R[11],E,E,5,[[[U]],[R[14]]]],[11,R[13],E,E,5,[[["self"]],[R[14]]]],[11,"into",E,E,5,[[["self"]],[U]]],[11,R[40],E,E,5,[[["self"]],[T]]],[11,R[12],E,E,5,[[["self"]],[T]]],[11,R[18],E,E,5,[[["self"]],[R[41]]]],[11,R[16],E,E,5,[[["self"]],[T]]],[11,R[17],E,E,5,N],[11,"from",E,E,6,[[[T]],[T]]],[11,R[11],E,E,6,[[[U]],[R[14]]]],[11,R[13],E,E,6,[[["self"]],[R[14]]]],[11,"into",E,E,6,[[["self"]],[U]]],[11,R[40],E,E,6,[[["self"]],[T]]],[11,R[12],E,E,6,[[["self"]],[T]]],[11,R[18],E,E,6,[[["self"]],[R[41]]]],[11,R[16],E,E,6,[[["self"]],[T]]],[11,R[17],E,E,6,N],[11,"from",E,E,7,[[[T]],[T]]],[11,R[11],E,E,7,[[[U]],[R[14]]]],[11,R[13],E,E,7,[[["self"]],[R[14]]]],[11,"into",E,E,7,[[["self"]],[U]]],[11,R[40],E,E,7,[[["self"]],[T]]],[11,R[12],E,E,7,[[["self"]],[T]]],[11,R[18],E,E,7,[[["self"]],[R[41]]]],[11,R[16],E,E,7,[[["self"]],[T]]],[11,R[17],E,E,7,N],[11,"from",E,E,8,[[[T]],[T]]],[11,R[11],E,E,8,[[[U]],[R[14]]]],[11,R[13],E,E,8,[[["self"]],[R[14]]]],[11,"into",E,E,8,[[["self"]],[U]]],[11,R[40],E,E,8,[[["self"]],[T]]],[11,R[12],E,E,8,[[["self"]],[T]]],[11,R[18],E,E,8,[[["self"]],[R[41]]]],[11,R[16],E,E,8,[[["self"]],[T]]],[11,R[17],E,E,8,N],[11,"from",E,E,10,[[[T]],[T]]],[11,R[11],E,E,10,[[[U]],[R[14]]]],[11,R[13],E,E,10,[[["self"]],[R[14]]]],[11,"into",E,E,10,[[["self"]],[U]]],[11,R[40],E,E,10,[[["self"]],[T]]],[11,R[12],E,E,10,[[["self"]],[T]]],[11,R[18],E,E,10,[[["self"]],[R[41]]]],[11,R[16],E,E,10,[[["self"]],[T]]],[11,R[17],E,E,10,N],[11,"from",E,E,11,[[[T]],[T]]],[11,R[11],E,E,11,[[[U]],[R[14]]]],[11,R[13],E,E,11,[[["self"]],[R[14]]]],[11,"into",E,E,11,[[["self"]],[U]]],[11,R[40],E,E,11,[[["self"]],[T]]],[11,R[12],E,E,11,[[["self"]],[T]]],[11,R[18],E,E,11,[[["self"]],[R[41]]]],[11,R[16],E,E,11,[[["self"]],[T]]],[11,R[17],E,E,11,N],[11,"fmt",E,E,0,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,9,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,1,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,2,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,3,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,4,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,5,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,6,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,7,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,8,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,10,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,11,[[["self"],[R[28]]],[R[14]]]],[11,"clone",E,E,0,[[["self"]],[R[58]]]],[11,"clone",E,E,9,[[["self"]],[R[53]]]],[11,"clone",E,E,1,[[["self"]],[R[54]]]],[11,"clone",E,E,2,[[["self"]],[R[55]]]],[11,"clone",E,E,3,[[["self"]],[R[56]]]],[11,"clone",E,E,4,[[["self"]],[R[57]]]],[11,"clone",E,E,5,[[["self"]],[R[59]]]],[11,"clone",E,E,6,[[["self"]],[R[60]]]],[11,"clone",E,E,7,[[["self"]],[R[61]]]],[11,"clone",E,E,8,[[["self"]],[R[62]]]],[11,"clone",E,E,10,[[["self"]],[R[63]]]],[11,"clone",E,E,11,[[["self"]],[R[64]]]],[11,"default",E,E,0,[[],[R[58]]]],[11,"as_mut",E,E,0,N],[11,R[23],E,"Create a new `SplitMix64`.",9,N],[11,R[24],E,"Seed a `SplitMix64` from a `u64`.",9,[[["u64"]],[R[53]]]],[11,R[23],E,"Create a new `Xoshiro128StarStar`. If `seed` is entirely…",1,N],[11,R[24],E,"Seed a `Xoshiro128StarStar` from a `u64` using `SplitMix64`.",1,[[["u64"]],[R[54]]]],[11,R[23],E,"Create a new `Xoshiro128Plus`. If `seed` is entirely 0, it…",2,N],[11,R[24],E,"Seed a `Xoshiro128Plus` from a `u64` using `SplitMix64`.",2,[[["u64"]],[R[55]]]],[11,R[23],E,"Create a new `Xoshiro256StarStar`. If `seed` is entirely…",3,N],[11,R[24],E,"Seed a `Xoshiro256StarStar` from a `u64` using `SplitMix64`.",3,[[["u64"]],[R[56]]]],[11,R[23],E,"Create a new `Xoshiro256Plus`. If `seed` is entirely 0, it…",4,N],[11,R[24],E,"Seed a `Xoshiro256Plus` from a `u64` using `SplitMix64`.",4,[[["u64"]],[R[57]]]],[11,R[23],E,"Create a new `Xoshiro512StarStar`. If `seed` is entirely…",5,[[[R[58]]],[R[59]]]],[11,R[24],E,"Seed a `Xoshiro512StarStar` from a `u64` using `SplitMix64`.",5,[[["u64"]],[R[59]]]],[11,R[23],E,"Create a new `Xoshiro512Plus`. If `seed` is entirely 0, it…",6,[[[R[58]]],[R[60]]]],[11,R[24],E,"Seed a `Xoshiro512Plus` from a `u64` using `SplitMix64`.",6,[[["u64"]],[R[60]]]],[11,R[23],E,"Create a new `Xoroshiro128Plus`. If `seed` is entirely 0,…",7,N],[11,R[24],E,"Seed a `Xoroshiro128Plus` from a `u64` using `SplitMix64`.",7,[[["u64"]],[R[61]]]],[11,R[23],E,"Create a new `Xoroshiro128StarStar`. If `seed` is entirely…",8,N],[11,R[24],E,"Seed a `Xoroshiro128StarStar` from a `u64` using…",8,[[["u64"]],[R[62]]]],[11,R[23],E,"Create a new `Xoroshiro64StarStar`. If `seed` is entirely…",10,N],[11,R[24],E,"Seed a `Xoroshiro64StarStar` from a `u64`.",10,[[["u64"]],[R[63]]]],[11,R[23],E,"Create a new `Xoroshiro64Star`. If `seed` is entirely 0,…",11,N],[11,R[24],E,"Seed a `Xoroshiro64Star` from a `u64` using `SplitMix64`.",11,[[["u64"]],[R[64]]]],[11,R[19],E,E,9,[[["self"]],["u32"]]],[11,R[20],E,E,9,[[["self"]],["u64"]]],[11,R[21],E,E,9,N],[11,R[22],E,E,9,N],[11,R[19],E,E,1,[[["self"]],["u32"]]],[11,R[20],E,E,1,[[["self"]],["u64"]]],[11,R[21],E,E,1,N],[11,R[22],E,E,1,N],[11,R[19],E,E,2,[[["self"]],["u32"]]],[11,R[20],E,E,2,[[["self"]],["u64"]]],[11,R[21],E,E,2,N],[11,R[22],E,E,2,N],[11,R[19],E,E,3,[[["self"]],["u32"]]],[11,R[20],E,E,3,[[["self"]],["u64"]]],[11,R[21],E,E,3,N],[11,R[22],E,E,3,N],[11,R[19],E,E,4,[[["self"]],["u32"]]],[11,R[20],E,E,4,[[["self"]],["u64"]]],[11,R[21],E,E,4,N],[11,R[22],E,E,4,N],[11,R[19],E,E,5,[[["self"]],["u32"]]],[11,R[20],E,E,5,[[["self"]],["u64"]]],[11,R[21],E,E,5,N],[11,R[22],E,E,5,N],[11,R[19],E,E,6,[[["self"]],["u32"]]],[11,R[20],E,E,6,[[["self"]],["u64"]]],[11,R[21],E,E,6,N],[11,R[22],E,E,6,N],[11,R[19],E,E,7,[[["self"]],["u32"]]],[11,R[20],E,E,7,[[["self"]],["u64"]]],[11,R[21],E,E,7,N],[11,R[22],E,E,7,N],[11,R[19],E,E,8,[[["self"]],["u32"]]],[11,R[20],E,E,8,[[["self"]],["u64"]]],[11,R[21],E,E,8,N],[11,R[22],E,E,8,N],[11,R[19],E,E,10,[[["self"]],["u32"]]],[11,R[20],E,E,10,[[["self"]],["u64"]]],[11,R[21],E,E,10,N],[11,R[22],E,E,10,N],[11,R[19],E,E,11,[[["self"]],["u32"]]],[11,R[20],E,E,11,[[["self"]],["u64"]]],[11,R[21],E,E,11,N],[11,R[22],E,E,11,N]],"p":[[3,"Seed512"],[3,R[65]],[3,R[66]],[3,R[67]],[3,R[68]],[3,R[69]],[3,R[70]],[3,R[71]],[3,R[72]],[3,R[73]],[3,R[74]],[3,R[75]]]};
searchIndex[R[76]]={"doc":"The ISAAC and ISAAC-64 random number generators.","i":[[0,"isaac",R[76],"The ISAAC random number generator.",N,N],[3,R[84],R[79],"A random number generator that uses the ISAAC algorithm.",N,N],[3,R[87],E,"The core of [`IsaacRng`], used with [`BlockRng`].",N,N],[11,R[77],E,R[83],0,[[["u64"]],["self"]]],[0,"isaac64",R[76],"The ISAAC-64 random number generator.",N,N],[3,R[85],R[80],"A random number generator that uses ISAAC-64, the 64-bit…",N,N],[3,R[86],E,"The core of `Isaac64Rng`, used with `BlockRng`.",N,N],[11,R[77],E,R[78],1,[[["u64"]],["self"]]],[11,R[77],E,R[78],2,[[["u64"]],["self"]]],[11,"from",R[79],E,0,[[[T]],[T]]],[11,R[11],E,E,0,[[[U]],[R[14]]]],[11,R[13],E,E,0,[[["self"]],[R[14]]]],[11,"into",E,E,0,[[["self"]],[U]]],[11,R[40],E,E,0,[[["self"]],[T]]],[11,R[12],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[["self"]],[R[41]]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,N],[11,"from",E,E,3,[[[T]],[T]]],[11,R[11],E,E,3,[[[U]],[R[14]]]],[11,R[13],E,E,3,[[["self"]],[R[14]]]],[11,"into",E,E,3,[[["self"]],[U]]],[11,R[40],E,E,3,[[["self"]],[T]]],[11,R[12],E,E,3,[[["self"]],[T]]],[11,R[18],E,E,3,[[["self"]],[R[41]]]],[11,R[16],E,E,3,[[["self"]],[T]]],[11,R[17],E,E,3,N],[11,"from",R[80],E,1,[[[T]],[T]]],[11,R[11],E,E,1,[[[U]],[R[14]]]],[11,R[13],E,E,1,[[["self"]],[R[14]]]],[11,"into",E,E,1,[[["self"]],[U]]],[11,R[40],E,E,1,[[["self"]],[T]]],[11,R[12],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[["self"]],[R[41]]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[17],E,E,1,N],[11,"from",E,E,2,[[[T]],[T]]],[11,R[11],E,E,2,[[[U]],[R[14]]]],[11,R[13],E,E,2,[[["self"]],[R[14]]]],[11,"into",E,E,2,[[["self"]],[U]]],[11,R[40],E,E,2,[[["self"]],[T]]],[11,R[12],E,E,2,[[["self"]],[T]]],[11,R[18],E,E,2,[[["self"]],[R[41]]]],[11,R[16],E,E,2,[[["self"]],[T]]],[11,R[17],E,E,2,N],[11,"fmt",R[79],E,0,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,3,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",R[80],E,1,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,2,[[["self"],[R[28]]],[R[14]]]],[11,"clone",R[79],E,0,[[["self"]],["isaacrng"]]],[11,"clone",E,E,3,[[["self"]],["isaaccore"]]],[11,"clone",R[80],E,1,[[["self"]],["isaac64rng"]]],[11,"clone",E,E,2,[[["self"]],["isaac64core"]]],[11,R[44],R[79],R[81],3,[[["self"],[R[82]]]]],[11,R[44],R[80],R[81],2,[[["self"],[R[82]]]]],[11,R[23],R[79],E,0,N],[11,R[24],E,R[83],0,[[["u64"]],["self"]]],[11,R[25],E,E,0,[[["s"]],[R[14],["error"]]]],[11,R[23],E,E,3,N],[11,R[24],E,R[83],3,[[["u64"]],["self"]]],[11,R[25],E,E,3,[[["r"]],[R[14],["error"]]]],[11,R[23],R[80],E,1,N],[11,R[24],E,R[83],1,[[["u64"]],["self"]]],[11,R[25],E,E,1,[[["s"]],[R[14],["error"]]]],[11,R[23],E,E,2,N],[11,R[24],E,E,2,[[["u64"]],["self"]]],[11,R[25],E,E,2,[[["r"]],[R[14],["error"]]]],[11,R[19],R[79],E,0,[[["self"]],["u32"]]],[11,R[20],E,E,0,[[["self"]],["u64"]]],[11,R[21],E,E,0,N],[11,R[22],E,E,0,N],[11,R[19],R[80],E,1,[[["self"]],["u32"]]],[11,R[20],E,E,1,[[["self"]],["u64"]]],[11,R[21],E,E,1,N],[11,R[22],E,E,1,N],[11,R[30],R[79],E,0,[[["self"],["__s"]],[R[14]]]],[11,R[30],E,E,3,[[["self"],["__s"]],[R[14]]]],[11,R[30],R[80],E,1,[[["self"],["__s"]],[R[14]]]],[11,R[30],E,E,2,[[["self"],["__s"]],[R[14]]]],[11,R[31],R[79],E,0,[[["__d"]],[R[14]]]],[11,R[31],E,E,3,[[["__d"]],[R[14]]]],[11,R[31],R[80],E,1,[[["__d"]],[R[14]]]],[11,R[31],E,E,2,[[["__d"]],[R[14]]]]],"p":[[3,R[84]],[3,R[85]],[3,R[86]],[3,R[87]]]};
searchIndex[R[88]]={"doc":"The ChaCha random number generator.","i":[[3,R[90],R[88],R[92],N,N],[3,R[91],E,"The core of `ChaChaRng`, used with `BlockRng`.",N,N],[11,"get_word_pos",E,"Get the offset from the start of the stream, in 32-bit…",0,[[["self"]],["u128"]]],[11,"set_word_pos",E,"Set the offset from the start of the stream, in 32-bit…",0,[[["self"],["u128"]]]],[11,"set_stream",E,"Set the stream number.",0,[[["self"],["u64"]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[11],E,E,0,[[[U]],[R[14]]]],[11,R[13],E,E,0,[[["self"]],[R[14]]]],[11,"into",E,E,0,[[["self"]],[U]]],[11,R[40],E,E,0,[[["self"]],[T]]],[11,R[12],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[["self"]],[R[41]]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,N],[11,"from",E,E,1,[[[T]],[T]]],[11,R[11],E,E,1,[[[U]],[R[14]]]],[11,R[13],E,E,1,[[["self"]],[R[14]]]],[11,"into",E,E,1,[[["self"]],[U]]],[11,R[40],E,E,1,[[["self"]],[T]]],[11,R[12],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[["self"]],[R[41]]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[17],E,E,1,N],[11,"fmt",E,E,0,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,1,[[["self"],[R[28]]],[R[14]]]],[11,"from",E,E,0,[[[R[89]]],["self"]]],[11,"clone",E,E,0,[[["self"]],["chacharng"]]],[11,"clone",E,E,1,[[["self"]],[R[89]]]],[11,R[44],E,E,1,N],[11,R[23],E,E,0,N],[11,R[25],E,E,0,[[["r"]],[R[14],["error"]]]],[11,R[23],E,E,1,N],[11,R[19],E,E,0,[[["self"]],["u32"]]],[11,R[20],E,E,0,[[["self"]],["u64"]]],[11,R[21],E,E,0,N],[11,R[22],E,E,0,N]],"p":[[3,R[90]],[3,R[91]]]};
searchIndex[R[93]]={"doc":"The xorshift random number generator.","i":[[3,R[94],R[93],"An Xorshift random number generator.",N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,R[11],E,E,0,[[[U]],[R[14]]]],[11,R[13],E,E,0,[[["self"]],[R[14]]]],[11,"into",E,E,0,[[["self"]],[U]]],[11,R[40],E,E,0,[[["self"]],[T]]],[11,R[12],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[["self"]],[R[41]]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,N],[11,"fmt",E,E,0,[[["self"],[R[28]]],[R[14]]]],[11,"clone",E,E,0,[[["self"]],["xorshiftrng"]]],[11,R[23],E,E,0,N],[11,R[25],E,E,0,[[["r"]],[R[14],["error"]]]],[11,R[19],E,E,0,[[["self"]],["u32"]]],[11,R[20],E,E,0,[[["self"]],["u64"]]],[11,R[21],E,E,0,N],[11,R[22],E,E,0,N],[11,R[30],E,E,0,[[["self"],["__s"]],[R[14]]]],[11,R[31],E,E,0,[[["__d"]],[R[14]]]]],"p":[[3,R[94]]]};
searchIndex[R[95]]={"doc":"Non-physical true random number generator based on timing…","i":[[3,R[99],R[95],R[202],N,N],[4,R[98],E,R[203],N,N],[13,"NoTimer",E,R[204],0,N],[13,R[205],E,R[206],0,N],[13,R[207],E,R[208],0,N],[13,R[209],E,R[210],0,N],[13,R[211],E,R[212],0,N],[11,"new",E,R[213],1,[[],[R[14],[R[97],R[96]]]]],[11,R[214],E,R[215],1,N],[11,R[216],E,R[217],1,[[["self"],["u8"]]]],[11,R[218],E,R[219],1,[[["self"]],[R[14],["u8",R[96]]]]],[11,R[220],E,R[221],1,[[["self"],["bool"]],["i64"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[11],E,E,1,[[[U]],[R[14]]]],[11,R[13],E,E,1,[[["self"]],[R[14]]]],[11,"into",E,E,1,[[["self"]],[U]]],[11,R[40],E,E,1,[[["self"]],[T]]],[11,R[12],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[["self"]],[R[41]]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[17],E,E,1,N],[11,"from",E,E,0,[[[T]],[T]]],[11,R[11],E,E,0,[[[U]],[R[14]]]],[11,R[13],E,E,0,[[["self"]],[R[14]]]],[11,"into",E,E,0,[[["self"]],[U]]],[11,R[40],E,E,0,[[["self"]],[T]]],[11,R[12],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[["self"]],[R[41]]]],[11,R[100],E,E,0,[[["self"]],["string"]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,N],[11,"fmt",E,E,0,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,0,[[["self"],[R[28]]],[R[14]]]],[11,"fmt",E,E,1,[[["self"],[R[28]]],[R[14]]]],[11,"eq",E,E,0,[[["self"],[R[96]]],["bool"]]],[11,"clone",E,E,0,[[["self"]],[R[96]]]],[11,"clone",E,E,1,[[["self"]],[R[97]]]],[11,R[29],E,E,0,[[["self"]],["str"]]],[11,R[19],E,E,1,[[["self"]],["u32"]]],[11,R[20],E,E,1,[[["self"]],["u64"]]],[11,R[21],E,E,1,N],[11,R[22],E,E,1,N]],"p":[[4,R[98]],[3,R[99]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);